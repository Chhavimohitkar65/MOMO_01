{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://momo/./node_modules/diff/lib/patch/parse.js","webpack://momo/./src/services/GeminiService.ts","webpack://momo/./src/services/ChromeDevTools.ts","webpack://momo/./src/agents/RunAgent.ts","webpack://momo/./src/agents/DocumentationAgent.ts","webpack://momo/./node_modules/diff/lib/util/params.js","webpack://momo/./node_modules/diff/lib/diff/css.js","webpack://momo/external commonjs \"ws\"","webpack://momo/./src/agents/TestAgent.ts","webpack://momo/./src/agents/DevToolsAgent.ts","webpack://momo/./node_modules/diff/lib/diff/base.js","webpack://momo/./src/extension.ts","webpack://momo/./node_modules/diff/lib/diff/line.js","webpack://momo/./node_modules/diff/lib/diff/array.js","webpack://momo/./src/agents/EditAgent.ts","webpack://momo/external commonjs \"vscode\"","webpack://momo/./node_modules/diff/lib/diff/word.js","webpack://momo/./node_modules/diff/lib/util/distance-iterator.js","webpack://momo/./node_modules/@google/generative-ai/dist/index.js","webpack://momo/./node_modules/diff/lib/patch/apply.js","webpack://momo/./src/agents/AgentRegistry.ts","webpack://momo/./node_modules/diff/lib/index.js","webpack://momo/./node_modules/diff/lib/patch/merge.js","webpack://momo/./node_modules/diff/lib/convert/dmp.js","webpack://momo/./node_modules/diff/lib/convert/xml.js","webpack://momo/./src/agents/FileManagementAgent.ts","webpack://momo/./node_modules/diff/lib/diff/character.js","webpack://momo/./node_modules/diff/lib/patch/create.js","webpack://momo/./node_modules/diff/lib/diff/json.js","webpack://momo/./node_modules/diff/lib/util/array.js","webpack://momo/./node_modules/diff/lib/patch/reverse.js","webpack://momo/./src/services/DiffService.ts","webpack://momo/./src/agents/ErrorFixAgent.ts","webpack://momo/./src/providers/SidebarProvider.ts","webpack://momo/./node_modules/diff/lib/diff/sentence.js","webpack://momo/external node-commonjs \"path\"","webpack://momo/external node-commonjs \"fs/promises\"","webpack://momo/./src/services/FileService.ts","webpack://momo/webpack/bootstrap","webpack://momo/webpack/startup"],"sourcesContent":["/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parsePatch = parsePatch;\n\n/*istanbul ignore end*/\nfunction parsePatch(uniDiff) {\n  /*istanbul ignore start*/\n  var\n  /*istanbul ignore end*/\n  options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    }; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","import * as vscode from 'vscode';\nimport { GoogleGenerativeAI, GenerativeModel, GenerationConfig } from '@google/generative-ai';\n\nexport interface ChatMessage {\n  role: 'user' | 'assistant' | 'system';\n  content: string;\n}\n\nexport class GeminiService {\n  private context: vscode.ExtensionContext;\n  private genAI: GoogleGenerativeAI | null = null;\n  private model: GenerativeModel | null = null;\n  private apiKey: string = '';\n  private readonly modelName: string = 'gemini-2.0-flash';\n\n  constructor(context: vscode.ExtensionContext) {\n    this.context = context;\n    this.initialize();\n\n    // Listen for configuration changes\n    vscode.workspace.onDidChangeConfiguration(e => {\n      if (e.affectsConfiguration('momo.apiKey')) {\n        this.initialize();\n      }\n    });\n  }\n\n  private initialize() {\n    const config = vscode.workspace.getConfiguration('momo');\n    this.apiKey = config.get('apiKey') as string;\n\n    if (this.apiKey) {\n      try {\n        this.genAI = new GoogleGenerativeAI(this.apiKey);\n        this.model = this.genAI.getGenerativeModel({ model: this.modelName });\n        console.log(`Initialized Gemini 2.0 Flash model`);\n      } catch (error) {\n        console.error('Failed to initialize Gemini API:', error);\n        vscode.window.showErrorMessage('Failed to initialize Gemini API. Please check your API key.');\n      }\n    } else {\n      vscode.window.showWarningMessage('Gemini API key not set. Please set it in the extension settings.');\n    }\n  }\n\n  private getModelConfig(): GenerationConfig {\n    return {\n      temperature: 0.3, // Lower temperature for more focused responses\n      topK: 20,\n      topP: 0.8,\n      maxOutputTokens: 4096, // Shorter responses for faster generation\n    };\n  }\n\n  public async generateResponse(messages: ChatMessage[], systemPrompt?: string): Promise<string> {\n    if (!this.model) {\n      throw new Error('Gemini model not initialized. Please check your API key.');\n    }\n\n    try {\n      // Prepare the chat history\n      const history: ChatMessage[] = [];\n      \n      // Add system prompt if provided\n      if (systemPrompt) {\n        history.push({ role: 'system', content: systemPrompt });\n      }\n      \n      // Add user messages\n      history.push(...messages);\n\n      // Convert to format expected by Gemini\n      const geminiMessages = history.map(msg => {\n        return {\n          role: msg.role === 'assistant' ? 'model' : msg.role,\n          parts: [{ text: msg.content }]\n        };\n      });\n\n      // Generate response with model-specific configuration\n      const chat = this.model.startChat({\n        generationConfig: this.getModelConfig(),\n        history: geminiMessages.slice(0, -1) as any, // All except the last message\n      });\n\n      const lastMessage = geminiMessages[geminiMessages.length - 1];\n      const result = await chat.sendMessage(lastMessage.parts[0].text);\n      const response = result.response.text();\n      \n      return response;\n    } catch (error) {\n      console.error('Error generating response:', error);\n      throw new Error(`Failed to generate response: ${error}`);\n    }\n  }\n\n  public async generateWithToolCalling(\n    messages: ChatMessage[], \n    tools: any[], \n    systemPrompt?: string\n  ): Promise<any> {\n    if (!this.model) {\n      throw new Error('Gemini model not initialized. Please check your API key.');\n    }\n\n    try {\n      // Prepare the chat history with system prompt\n      const history: ChatMessage[] = [];\n      \n      if (systemPrompt) {\n        history.push({ role: 'system', content: systemPrompt });\n      }\n      \n      history.push(...messages);\n\n      // Convert to format expected by Gemini\n      const geminiMessages = history.map(msg => {\n        return {\n          role: msg.role === 'assistant' ? 'model' : msg.role,\n          parts: [{ text: msg.content }]\n        };\n      });\n\n      // Generate response with tool calling and model-specific configuration\n      const chat = this.model.startChat({\n        generationConfig: {\n          ...this.getModelConfig(),\n          temperature: 0.2, // Lower temperature for more precise tool calling\n        },\n        tools: tools,\n        history: geminiMessages.slice(0, -1) as any,\n      });\n\n      const lastMessage = geminiMessages[geminiMessages.length - 1];\n      const result = await chat.sendMessage(lastMessage.parts[0].text);\n      return result.response;\n    } catch (error) {\n      console.error('Error in tool calling:', error);\n      throw new Error(`Failed in tool calling: ${error}`);\n    }\n  }\n}","import * as vscode from 'vscode';\nimport CDP from 'chrome-remote-interface';\nimport { UISuggestion, ErrorReport, TestRequest } from '../types/devtools';\nimport Protocol from 'devtools-protocol';\n\nexport interface UIAnalysisResult {\n  elements: { selector: string; issues: string[] }[];\n  suggestions: UISuggestion[];\n}\n\nexport class ChromeDevTools {\n  private outputChannel: vscode.OutputChannel;\n  private client: CDP.Client | null = null;\n\n  constructor() {\n    this.outputChannel = vscode.window.createOutputChannel('Chrome DevTools');\n  }\n\n  async connectToDevTools(): Promise<boolean> {\n    try {\n      // Implementation for Chrome DevTools connection\n      return true;\n    } catch (error) {\n      this.outputChannel.appendLine(`Error connecting to DevTools: ${error}`);\n      return false;\n    }\n  }\n\n  async analyzeUI(selector: string): Promise<UIAnalysisResult> {\n    // Implementation\n    return {\n      elements: [],\n      suggestions: []\n    };\n  }\n\n  async captureScreenshot(selector: string): Promise<string> {\n    // Implementation for screenshot capture\n    return '';\n  }\n\n  async evaluateAccessibility(selector: string): Promise<Protocol.Accessibility.AXNode[]> {\n    // Implementation for accessibility evaluation\n    return [];\n  }\n\n  async monitorNetworkRequests(): Promise<void> {\n    // Implementation for network monitoring\n  }\n\n  async injectUITest(testScript: string): Promise<void> {\n    // Implementation for UI test injection\n  }\n\n  dispose() {\n    this.outputChannel.dispose();\n  }\n}\n","import { BaseAgent, AgentContext, AgentResponse } from './BaseAgent';\nimport * as vscode from 'vscode';\n\nexport class RunAgent implements BaseAgent {\n  id = 'run-agent';\n  name = 'Run Agent';\n  description = 'Executes code and commands in the workspace';\n  commandPrefix = '@run';\n\n  public canHandle(input: string): boolean {\n    return input.startsWith(this.commandPrefix);\n  }\n\n  public async execute(context: AgentContext): Promise<AgentResponse> {\n    try {\n      const { prompt } = context;\n      if (!prompt) {\n        return {\n          success: false,\n          message: 'No command provided'\n        };\n      }\n\n      const command = prompt.substring(this.commandPrefix.length).trim();\n      \n      // For now, just return the command that would be run\n      return {\n        success: true,\n        message: `Would run command: ${command}`,\n        content: command\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `Error executing command: ${error instanceof Error ? error.message : String(error)}`\n      };\n    }\n  }\n}\n","import { BaseAgent, AgentContext, AgentResponse } from './BaseAgent';\nimport { GeminiService } from '../services/GeminiService';\nimport { FileService } from '../services/FileService';\nimport * as path from 'path';\nimport * as fs from 'fs/promises';\nimport * as vscode from 'vscode';\n\nexport class DocumentationAgent implements BaseAgent {\n  id = 'doc-agent';\n  name = 'Documentation Agent';\n  description = 'Generates documentation for files and folders';\n  commandPrefix = '@doc';\n\n  canHandle(input: string): boolean {\n    return input.startsWith(this.commandPrefix);\n  }\n\n  async execute(context: AgentContext): Promise<AgentResponse> {\n    try {\n      const { filePath, prompt, fileService, geminiService } = context;\n      \n      if (!filePath) {\n        return {\n          success: false,\n          message: 'Please specify a file or folder path'\n        };\n      }\n\n      // Remove @doc prefix from filePath\n      const targetPath = filePath.startsWith('@doc') ? filePath.substring(4).trim() : filePath;\n      \n      // Create documentation output path\n      const docOutputPath = this.getDocumentationFilePath(targetPath);\n\n      let documentation: string;\n\n      try {\n        const content = await fileService.readFile(targetPath);\n        // Generate documentation\n        documentation = await this.generateDocumentation(targetPath, content, prompt || '', geminiService);\n        \n        // Write documentation to txt file\n        await fileService.writeFile(docOutputPath, documentation);\n\n        return {\n          success: true,\n          message: `Documentation created at: ${docOutputPath}`,\n          content: documentation\n        };\n      } catch (error) {\n        return {\n          success: false,\n          message: `Error processing file ${targetPath}: ${error instanceof Error ? error.message : String(error)}`\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: `Error in DocumentationAgent: ${error instanceof Error ? error.message : String(error)}`\n      };\n    }\n  }\n\n  private getDocumentationFilePath(sourceFilePath: string): string {\n    const dir = path.dirname(sourceFilePath);\n    const basename = path.basename(sourceFilePath, path.extname(sourceFilePath));\n    return path.join(dir, `${basename}_documentation.txt`);\n  }\n\n  private async generateDocumentation(\n    filePath: string,\n    content: string,\n    prompt: string,\n    geminiService: GeminiService\n  ): Promise<string> {\n    const fileType = path.extname(filePath);\n    const context = `\nAnalyze and document the following ${fileType} file:\n${path.basename(filePath)}\n\nCODE:\n\\`\\`\\`${fileType}\n${content}\n\\`\\`\\`\n\nGenerate detailed documentation including:\n\nFILE OVERVIEW\n-------------\n- Purpose and main functionality\n- Key features and responsibilities\n\nCOMPONENTS BREAKDOWN\n------------------\n- List of functions/methods\n- Classes and interfaces\n- Important variables and constants\n\nDEPENDENCIES\n-----------\n- External dependencies\n- Internal module dependencies\n\nUSAGE EXAMPLES\n-------------\n- Basic usage examples\n- Common patterns\n\nTECHNICAL DETAILS\n---------------\n- Important implementation details\n- Architecture decisions\n- Performance considerations\n\nAdditional requirements: ${prompt}\n\nFormat the response as a plain text document with clear sections and proper spacing.`;\n\n    const response = await geminiService.generateResponse([\n      { role: 'user', content: context }\n    ]);\n\n    const timestamp = new Date().toISOString();\n    return `DOCUMENTATION GENERATED ON: ${timestamp}\n========================================\n\n${response}`;\n  }\n\n  private createChangeLogEntry(\n    timestamp: string,\n    targetPath: string,\n    action: string,\n    prompt: string\n  ): string {\n    return `\n=================================================================\nDate: ${timestamp}\nTarget: ${targetPath}\nAction: ${action}\nRequest: ${prompt || 'No specific requirements'}\n=================================================================\n`;\n  }\n\n  private getChangeLogPath(filePath: string): string {\n    const dir = path.dirname(filePath);\n    return path.join(dir, 'documentation_changes.txt');\n  }\n\n  private async updateChangeLog(\n    changeLogPath: string,\n    newEntry: string,\n    fileService: FileService\n  ): Promise<void> {\n    let existingContent = '';\n    try {\n      existingContent = await fileService.readFile(changeLogPath);\n    } catch (error) {\n      // File doesn't exist yet, start with empty content\n    }\n\n    const updatedContent = newEntry + existingContent;\n    await fileService.writeFile(changeLogPath, updatedContent);\n  }\n\n  private async generateFileDocumentation(\n    filePath: string,\n    content: string,\n    prompt: string,\n    geminiService: GeminiService\n  ): Promise<string> {\n    const fileType = path.extname(filePath);\n    const context = `\nGenerate comprehensive documentation for this ${fileType} file.\nFile: ${path.basename(filePath)}\n\nContent:\n\\`\\`\\`${fileType}\n${content}\n\\`\\`\\`\n\nAdditional requirements: ${prompt}\n\nPlease provide markdown documentation that includes:\n1. Overview of the file's purpose\n2. Main components/functions and their purposes\n3. Important types/interfaces/classes\n4. Usage examples where applicable\n5. Dependencies and requirements\n6. Any important notes or caveats\n\nFormat the response as a proper markdown document.`;\n\n    const response = await geminiService.generateResponse([\n      { role: 'user', content: context }\n    ]);\n\n    return response;\n  }\n\n  private async generateFolderDocumentation(\n    folderPath: string,\n    fileService: FileService,\n    geminiService: GeminiService\n  ): Promise<string> {\n    // Get folder structure\n    const structure = await this.getFolderStructure(folderPath);\n    \n    // Get brief summaries of important files\n    const fileOverviews = await this.getFileOverviews(folderPath, fileService, geminiService);\n\n    const context = `\nGenerate comprehensive documentation for this project folder.\nFolder: ${path.basename(folderPath)}\n\nFolder structure:\n\\`\\`\\`\n${structure}\n\\`\\`\\`\n\nFile overviews:\n${fileOverviews}\n\nPlease provide a markdown document that includes:\n1. Project overview\n2. Folder structure explanation\n3. Main components and their purposes\n4. Setup and installation instructions\n5. Usage examples\n6. Dependencies\n7. Contributing guidelines\n8. License information (if available)\n\nFormat the response as a proper markdown document.`;\n\n    const response = await geminiService.generateResponse([\n      { role: 'user', content: context }\n    ]);\n\n    return response;\n  }\n\n  private async getFolderStructure(folderPath: string, indent = ''): Promise<string> {\n    let result = '';\n    const items = await fs.readdir(folderPath);\n\n    for (const item of items) {\n      if (this.shouldIgnore(item)) continue;\n\n      const fullPath = path.join(folderPath, item);\n      const stats = await fs.stat(fullPath);\n\n      if (stats.isDirectory()) {\n        result += `${indent}${item}/\\n`;\n        result += await this.getFolderStructure(fullPath, indent + '  ');\n      } else {\n        result += `${indent}${item}\\n`;\n      }\n    }\n\n    return result;\n  }\n\n  private async getFileOverviews(\n    folderPath: string,\n    fileService: FileService,\n    geminiService: GeminiService\n  ): Promise<string> {\n    const importantFiles = await this.findImportantFiles(folderPath);\n    let overviews = '';\n\n    for (const file of importantFiles) {\n      try {\n        const content = await fileService.readFile(file);\n        const overview = await geminiService.generateResponse([{\n          role: 'user',\n          content: `Provide a 2-3 sentence overview of this file's purpose:\\n\\`\\`\\`\\n${content}\\n\\`\\`\\``\n        }]);\n        overviews += `\\n${path.relative(folderPath, file)}:\\n${overview}\\n`;\n      } catch (error) {\n        console.error(`Error processing ${file}:`, error);\n      }\n    }\n\n    return overviews;\n  }\n\n  private async findImportantFiles(folderPath: string): Promise<string[]> {\n    const important: string[] = [];\n    const self = this; // Store reference to this\n    \n    async function scan(dir: string) {\n      const items = await fs.readdir(dir);\n      \n      for (const item of items) {\n        if (item.startsWith('.')) continue;\n        \n        const fullPath = path.join(dir, item);\n        const stats = await fs.stat(fullPath);\n        \n        if (stats.isDirectory()) {\n          await scan(fullPath);\n        } else if (self.isImportantFile(item)) { // Use self instead of this\n          important.push(fullPath);\n        }\n      }\n    }\n\n    await scan(folderPath);\n    return important;\n  }\n\n  private isImportantFile(filename: string): boolean {\n    const important = [\n      'README.md',\n      'package.json',\n      'tsconfig.json',\n      'index.ts',\n      'index.js',\n      'main.ts',\n      'main.js',\n      'app.ts',\n      'app.js'\n    ];\n    \n    return Boolean(\n      important.includes(filename) ||\n      filename.endsWith('.d.ts') ||\n      filename.match(/^index\\.[jt]sx?$/)\n    );\n  }\n\n  private shouldIgnore(item: string): boolean {\n    const ignoreList = [\n      'node_modules',\n      '.git',\n      'dist',\n      'build',\n      '.DS_Store',\n      'coverage'\n    ];\n    return ignoreList.includes(item) || item.startsWith('.');\n  }\n\n  private getDocumentationPath(filePath: string): string {\n    const dir = path.dirname(filePath);\n    const basename = path.basename(filePath, path.extname(filePath));\n    return path.join(dir, `${basename}.md`);\n  }\n}","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateOptions = generateOptions;\n\n/*istanbul ignore end*/\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3BhcmFtcy5qcyJdLCJuYW1lcyI6WyJnZW5lcmF0ZU9wdGlvbnMiLCJvcHRpb25zIiwiZGVmYXVsdHMiLCJjYWxsYmFjayIsIm5hbWUiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU8sU0FBU0EsZUFBVCxDQUF5QkMsT0FBekIsRUFBa0NDLFFBQWxDLEVBQTRDO0FBQ2pELE1BQUksT0FBT0QsT0FBUCxLQUFtQixVQUF2QixFQUFtQztBQUNqQ0MsSUFBQUEsUUFBUSxDQUFDQyxRQUFULEdBQW9CRixPQUFwQjtBQUNELEdBRkQsTUFFTyxJQUFJQSxPQUFKLEVBQWE7QUFDbEIsU0FBSyxJQUFJRyxJQUFULElBQWlCSCxPQUFqQixFQUEwQjtBQUN4QjtBQUNBLFVBQUlBLE9BQU8sQ0FBQ0ksY0FBUixDQUF1QkQsSUFBdkIsQ0FBSixFQUFrQztBQUNoQ0YsUUFBQUEsUUFBUSxDQUFDRSxJQUFELENBQVIsR0FBaUJILE9BQU8sQ0FBQ0csSUFBRCxDQUF4QjtBQUNEO0FBQ0Y7QUFDRjs7QUFDRCxTQUFPRixRQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVPcHRpb25zKG9wdGlvbnMsIGRlZmF1bHRzKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGRlZmF1bHRzLmNhbGxiYWNrID0gb3B0aW9ucztcbiAgfSBlbHNlIGlmIChvcHRpb25zKSB7XG4gICAgZm9yIChsZXQgbmFtZSBpbiBvcHRpb25zKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgaWYgKG9wdGlvbnMuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgICAgZGVmYXVsdHNbbmFtZV0gPSBvcHRpb25zW25hbWVdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZGVmYXVsdHM7XG59XG4iXX0=\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffCss = diffCss;\nexports.cssDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar cssDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.cssDiff = cssDiff;\n\n/*istanbul ignore end*/\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2Nzcy5qcyJdLCJuYW1lcyI6WyJjc3NEaWZmIiwiRGlmZiIsInRva2VuaXplIiwidmFsdWUiLCJzcGxpdCIsImRpZmZDc3MiLCJvbGRTdHIiLCJuZXdTdHIiLCJjYWxsYmFjayIsImRpZmYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7OztBQUVPLElBQU1BLE9BQU8sR0FBRztBQUFJQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQSxDQUFKLEVBQWhCOzs7Ozs7QUFDUEQsT0FBTyxDQUFDRSxRQUFSLEdBQW1CLFVBQVNDLEtBQVQsRUFBZ0I7QUFDakMsU0FBT0EsS0FBSyxDQUFDQyxLQUFOLENBQVksZUFBWixDQUFQO0FBQ0QsQ0FGRDs7QUFJTyxTQUFTQyxPQUFULENBQWlCQyxNQUFqQixFQUF5QkMsTUFBekIsRUFBaUNDLFFBQWpDLEVBQTJDO0FBQUUsU0FBT1IsT0FBTyxDQUFDUyxJQUFSLENBQWFILE1BQWIsRUFBcUJDLE1BQXJCLEVBQTZCQyxRQUE3QixDQUFQO0FBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGNvbnN0IGNzc0RpZmYgPSBuZXcgRGlmZigpO1xuY3NzRGlmZi50b2tlbml6ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZS5zcGxpdCgvKFt7fTo7LF18XFxzKykvKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQ3NzKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjaykgeyByZXR1cm4gY3NzRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjayk7IH1cbiJdfQ==\n","module.exports = require(\"ws\");","import { BaseAgent, AgentContext, AgentResponse } from './BaseAgent';\nimport * as vscode from 'vscode';\nimport * as path from 'path';\n\nexport class TestAgent implements BaseAgent {\n  id = 'test-agent';\n  name = 'Test Agent';\n  description = 'Generates and updates test files for your code';\n  commandPrefix = '@test';\n  private terminal: vscode.Terminal | null = null;\n\n  canHandle(input: string): boolean {\n    return input.startsWith(this.commandPrefix);\n  }\n\n  async execute(context: AgentContext): Promise<AgentResponse> {\n    try {\n      const { filePath, originalContent, geminiService, fileService } = context;\n      \n      if (!filePath || !originalContent) {\n        return {\n          success: false,\n          message: 'Missing required file information'\n        };\n      }\n\n      // Determine test file path\n      const testFilePath = this.getTestFilePath(filePath);\n      \n      // Check if test file exists\n      let existingTests = '';\n      try {\n        existingTests = await fileService.readFile(testFilePath);\n      } catch (error) {\n        // Test file doesn't exist yet\n      }\n\n      // Generate test context\n      const testContext = this.createTestContext(\n        filePath,\n        originalContent,\n        existingTests,\n        context.prompt || ''\n      );\n\n      // Get LLM response for test generation\n      const llmResponse = await geminiService.generateResponse([\n        { role: 'user', content: testContext }\n      ]);\n\n      // Extract code and test statistics from response\n      const { code: testCode, stats } = this.extractTestCodeAndStats(llmResponse);\n\n      // Write or update test file\n      await fileService.writeFile(testFilePath, testCode);\n\n      // Run the tests\n      const runResult = await this.runTests(testFilePath);\n\n      return {\n        success: true,\n        message: `Tests ${existingTests ? 'updated' : 'created'} at ${testFilePath}\\n${runResult}`,\n        content: testCode,\n        testStats: stats\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `Error in TestAgent: ${error instanceof Error ? error.message : String(error)}`\n      };\n    }\n  }\n\n  private getTestFilePath(sourceFilePath: string): string {\n    const dir = path.dirname(sourceFilePath);\n    const ext = path.extname(sourceFilePath);\n    const basename = path.basename(sourceFilePath, ext);\n    \n    // Handle different testing conventions\n    switch (ext) {\n      case '.ts':\n      case '.tsx':\n        return path.join(dir, `${basename}.test${ext}`);\n      case '.js':\n      case '.jsx':\n        return path.join(dir, `${basename}.test${ext}`);\n      case '.py':\n        return path.join(dir, `test_${basename}.py`);\n      case '.rb':\n        return path.join(dir, `${basename}_test.rb`);\n      default:\n        return path.join(dir, `${basename}.test${ext}`);\n    }\n  }\n\n  private createTestContext(\n    filePath: string,\n    sourceCode: string,\n    existingTests: string,\n    prompt: string\n  ): string {\n    const fileExtension = path.extname(filePath).toLowerCase();\n    const framework = this.detectTestFramework(fileExtension, sourceCode);\n    \n    // Add Python-specific template\n    if (fileExtension === '.py') {\n      return `\nGenerate Python tests for the following source code:\n\nSource file: ${filePath}\nFramework: ${framework}\n\nSource code:\n\\`\\`\\`python\n${sourceCode}\n\\`\\`\\`\n\n${existingTests ? `Existing tests:\n\\`\\`\\`python\n${existingTests}\n\\`\\`\\`\n` : ''}\n\nAdditional requirements: ${prompt}\n\nInstructions:\n1. Include necessary imports (pytest, unittest, etc.)\n2. Create proper test class if using unittest\n3. Use pytest fixtures if needed\n4. Follow Python testing best practices\n5. Include docstrings for test functions\n6. Add proper assertions\n\nThe test file should start with imports and should be valid Python syntax.\nExample structure:\nimport pytest\nfrom {module} import *\n\ndef test_function():\n    # test code here\n\nPlease provide the complete test file content.\n\nAfter the test code, please provide test statistics in the following format:\n---TEST-STATS---\nTotal: <number>\nFailed: <number>\n`;\n    }\n    \n    return `\nGenerate tests for the following source code:\n\nSource file: ${filePath}\nFramework: ${framework}\n\nSource code:\n\\`\\`\\`${fileExtension}\n${sourceCode}\n\\`\\`\\`\n\n${existingTests ? `Existing tests:\n\\`\\`\\`${fileExtension}\n${existingTests}\n\\`\\`\\`\n` : ''}\n\nAdditional requirements: ${prompt}\n\nInstructions:\n1. Create comprehensive tests that cover the main functionality\n2. Include test cases for edge cases and error conditions\n3. Follow ${framework} testing patterns and best practices\n4. Use clear test descriptions that explain what is being tested\n5. Include setup and teardown if needed\n6. Add comments explaining complex test scenarios\n\nPlease provide the complete test file content.\n\nAfter the test code, please provide test statistics in the following format:\n---TEST-STATS---\nTotal: <number>\nFailed: <number>\n`;\n  }\n\n  private detectTestFramework(fileExtension: string, sourceCode: string): string {\n    // Detect testing framework based on file extension and code content\n    switch (fileExtension) {\n      case '.ts':\n      case '.tsx':\n        return sourceCode.includes('jest') ? 'Jest' : 'Mocha';\n      case '.js':\n      case '.jsx':\n        return sourceCode.includes('jest') ? 'Jest' : 'Mocha';\n      case '.py':\n        return sourceCode.includes('pytest') ? 'pytest' : 'unittest';\n      case '.rb':\n        return 'RSpec';\n      case '.go':\n        return 'testing';\n      case '.java':\n        return 'JUnit';\n      default:\n        return 'Jest';\n    }\n  }\n\n  private extractTestCode(llmResponse: string): string {\n    const codeBlockRegex = /```(?:[\\w-]*\\n)?([\\s\\S]*?)```/g;\n    const matches = Array.from(llmResponse.matchAll(codeBlockRegex));\n    \n    if (matches.length > 0) {\n      // Use the largest code block\n      return matches.reduce((longest, current) => \n        current[1].length > longest.length ? current[1] : longest\n      , '').trim();\n    }\n    \n    // If no code blocks found, return the raw response\n    return llmResponse;\n  }\n\n  private extractTestCodeAndStats(llmResponse: string): { code: string, stats: { total: number, failed: number } } {\n    const statsRegex = /---TEST-STATS---\\s*Total:\\s*(\\d+)\\s*Failed:\\s*(\\d+)/;\n    const statsMatch = llmResponse.match(statsRegex);\n    \n    const stats = {\n      total: 0,\n      failed: 0\n    };\n\n    if (statsMatch) {\n      stats.total = parseInt(statsMatch[1], 10);\n      stats.failed = parseInt(statsMatch[2], 10);\n    }\n\n    // Remove stats section from the response\n    const cleanResponse = llmResponse.replace(/---TEST-STATS---[\\s\\S]*$/, '').trim();\n    \n    // Extract code using existing method\n    const code = this.extractTestCode(cleanResponse);\n\n    return { code, stats };\n  }\n\n  private async runTests(testFilePath: string): Promise<string> {\n    const ext = path.extname(testFilePath);\n    const command = this.getTestCommand(ext, testFilePath);\n    \n    if (!command) {\n      return 'Test running not supported for this file type';\n    }\n\n    // Resolve full path relative to workspace\n    const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\n    if (!workspaceFolder) {\n      return 'Error: No workspace folder found';\n    }\n\n    const fullTestPath = path.isAbsolute(testFilePath) \n      ? testFilePath \n      : path.join(workspaceFolder.uri.fsPath, testFilePath);\n\n    // Add Python-specific validation\n    if (ext === '.py') {\n      try {\n        const testFileUri = vscode.Uri.file(fullTestPath);\n        await vscode.workspace.fs.stat(testFileUri);\n      } catch (error) {\n        return `Error: Test file not found at ${fullTestPath}. Make sure the file exists and you have correct permissions.`;\n      }\n    }\n\n    // Create or reuse terminal\n    if (!this.terminal) {\n      this.terminal = vscode.window.createTerminal('Test Runner');\n    }\n    \n    this.terminal.show();\n    \n    // For Python, add virtual environment activation if needed\n    if (ext === '.py') {\n      const venvPath = path.join(workspaceFolder.uri.fsPath, 'venv');\n      const activateCmd = process.platform === 'win32' \n        ? `${venvPath}\\\\Scripts\\\\activate` \n        : `source ${venvPath}/bin/activate`;\n        \n      // Only try to activate if venv exists\n      if (await this.pathExists(venvPath)) {\n        this.terminal.sendText(activateCmd);\n      }\n    }\n    \n    // Use resolved full path in command\n    const finalCommand = this.getTestCommand(ext, fullTestPath);\n    this.terminal.sendText(finalCommand);\n    return `Running tests with command: ${finalCommand}`;\n  }\n\n  // Helper method to check if path exists\n  private async pathExists(filePath: string): Promise<boolean> {\n    try {\n      await vscode.workspace.fs.stat(vscode.Uri.file(filePath));\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  private getTestCommand(ext: string, testPath: string): string {\n    // Escape spaces in path\n    const escapedPath = testPath.includes(' ') ? `\"${testPath}\"` : testPath;\n    \n    switch (ext) {\n      case '.ts':\n      case '.tsx':\n        return `jest ${escapedPath}`;\n      case '.js':\n      case '.jsx':\n        return `jest ${escapedPath}`;\n      case '.py':\n        return `python -m pytest ${escapedPath} -v`;  // Added -v for verbose output\n      case '.rb':\n        return `rspec ${escapedPath}`;\n      case '.go':\n        return `go test ${escapedPath}`;\n      case '.java':\n        return `./gradlew test --tests \"${escapedPath}\"`;\n      default:\n        return '';\n    }\n  }\n\n  async validate(context: AgentContext): Promise<boolean> {\n    if (!context.filePath || !context.originalContent) {\n      return false;\n    }\n\n    // Check if file extension is supported\n    const ext = path.extname(context.filePath).toLowerCase();\n    const supportedExtensions = ['.ts', '.tsx', '.js', '.jsx', '.py', '.rb', '.go', '.java'];\n    \n    return supportedExtensions.includes(ext);\n  }\n}","import { BaseAgent, AgentContext, AgentResponse } from './BaseAgent';\nimport WebSocket, { WebSocketServer } from 'ws';\nimport * as vscode from 'vscode';\nimport { ChromeDevTools } from '../services/ChromeDevTools';\nimport { DevToolsMessage, UISuggestion, ErrorReport, TestRequest } from '../types/devtools';\nimport { EditAgent } from './EditAgent';\nimport { FileService } from '../services/FileService';\nimport { DiffService } from '../services/DiffService';\n\nexport class DevToolsAgent implements BaseAgent {\n  id = 'devtools-agent';\n  name = 'DevTools Agent';\n  description = 'Integrates with Chrome DevTools for real-time UI assistance';\n  commandPrefix = '@ui';\n\n  private wsServer: WebSocketServer | null = null;\n  private clients: Set<WebSocket> = new Set();\n  private chromeDevTools: ChromeDevTools;\n  private outputChannel: vscode.OutputChannel;\n  private diagnosticsCollection: vscode.DiagnosticCollection;\n  private _geminiService: any; // Will be initialized in execute()\n  private _context: vscode.ExtensionContext;\n\n  constructor(context: vscode.ExtensionContext) {\n    this._context = context;\n    this.chromeDevTools = new ChromeDevTools();\n    this.outputChannel = vscode.window.createOutputChannel('Momo DevTools');\n    this.diagnosticsCollection = vscode.languages.createDiagnosticCollection('momo-devtools');\n    this.setupWebSocketServer();\n  }\n\n  private setupWebSocketServer() {\n    try {\n      this.wsServer = new WebSocketServer({ port: 9229 });\n      this.outputChannel.appendLine('DevTools WebSocket server started on port 9229');\n\n      this.wsServer.on('connection', (ws: WebSocket) => {\n        this.clients.add(ws);\n        this.outputChannel.appendLine('New DevTools client connected');\n\n        ws.on('message', async (message: Buffer | ArrayBuffer | Buffer[]) => {\n          try {\n            const data: DevToolsMessage = JSON.parse(message.toString());\n            await this.handleDevToolsMessage(data);\n          } catch (error) {\n            this.outputChannel.appendLine(`Error handling message: ${error}`);\n          }\n        });\n\n        ws.on('close', () => {\n          this.clients.delete(ws);\n          this.outputChannel.appendLine('DevTools client disconnected');\n        });\n      });\n    } catch (error) {\n      this.outputChannel.appendLine(`Error setting up WebSocket server: ${error}`);\n    }\n  }\n\n  private async handleDevToolsMessage(data: DevToolsMessage) {\n    try {\n      if (data.type === 'edit-request' && data.filePath && data.originalContent) {\n        await this.handleEditRequest(data);\n      } else {\n        const aiPrompt = this.createAIPrompt(data);\n        const aiResponse = await this._geminiService.generateResponse([\n          { role: 'system', content: 'You are a UI/UX expert analyzing web applications.' },\n          { role: 'user', content: aiPrompt }\n        ]);\n\n        switch (data.type) {\n          case 'ui-suggestion':\n            await this.handleUISuggestion(data.suggestion!, aiResponse);\n            break;\n          case 'error-report':\n            await this.handleErrorReport(data.error!, aiResponse);\n            break;\n          case 'test-request':\n            await this.handleTestRequest(data.component!, aiResponse);\n            break;\n        }\n      }\n    } catch (error) {\n      this.outputChannel.appendLine(`Error processing message with AI: ${error}`);\n    }\n  }\n\n  private async handleEditRequest(data: DevToolsMessage) {\n    const editAgent = new EditAgent();\n    const editContext: AgentContext = {\n      filePath: data.filePath!,\n      originalContent: data.originalContent!,\n      prompt: data.prompt || '',\n      geminiService: this._geminiService,\n      fileService: new FileService(this._context),\n      diffService: new DiffService()\n    };\n\n    const result = await editAgent.execute(editContext);\n    this.broadcastToDevTools({\n      type: 'edit-response',\n      success: result.success,\n      message: result.message,\n      changes: result.content\n    });\n  }\n\n  private createAIPrompt(data: DevToolsMessage): string {\n    switch (data.type) {\n      case 'ui-suggestion':\n        return `Analyze this UI element and provide improvements:\nElement: ${data.suggestion?.selector}\nCurrent state: ${data.suggestion?.recommendation}\nPriority: ${data.suggestion?.priority}\n\nProvide specific suggestions for:\n1. Accessibility improvements\n2. UX enhancements\n3. Performance optimizations\n4. Best practices compliance`;\n\n      case 'error-report':\n        return `Analyze this error and suggest fixes:\nError type: ${data.error?.type}\nMessage: ${data.error?.message}\nStack trace: ${data.error?.stack}\nElement: ${data.error?.selector}\n\nProvide:\n1. Root cause analysis\n2. Potential fixes\n3. Prevention strategies\n4. Testing recommendations`;\n\n      case 'test-request':\n        return `Generate test cases for this component:\nComponent: ${data.component?.name}\nSelector: ${data.component?.selector}\nInteractions: ${data.component?.interactions?.join(', ')}\n\nInclude:\n1. Unit tests\n2. Integration tests\n3. E2E test scenarios\n4. Accessibility tests`;\n\n      default:\n        return '';\n    }\n  }\n\n  private async handleUISuggestion(suggestion: UISuggestion, aiResponse: string) {\n    const aiEnhancedSuggestion = {\n      ...suggestion,\n      aiAnalysis: aiResponse,\n      timestamp: new Date().toISOString()\n    };\n\n    this.broadcastToDevTools({\n      type: 'ui-suggestion-enhanced',\n      suggestion: aiEnhancedSuggestion\n    });\n\n    vscode.window.showInformationMessage(\n      `UI Suggestion for ${suggestion.selector}: ${aiResponse.split('\\n')[0]}`,\n      'View Details'\n    ).then(selection => {\n      if (selection === 'View Details') {\n        this.showDetailedAnalysis(aiEnhancedSuggestion);\n      }\n    });\n  }\n\n  private async handleErrorReport(error: ErrorReport, aiResponse: string) {\n    const aiEnhancedError = {\n      ...error,\n      aiAnalysis: aiResponse,\n      timestamp: new Date().toISOString()\n    };\n\n    this.broadcastToDevTools({\n      type: 'error-report-enhanced',\n      error: aiEnhancedError\n    });\n\n    this.showInProblemsPanel(aiEnhancedError);\n  }\n\n  private async handleTestRequest(component: TestRequest, aiResponse: string) {\n    const testCases = this.parseTestCases(aiResponse);\n    const aiEnhancedTest = {\n      ...component,\n      generatedTests: testCases,\n      timestamp: new Date().toISOString()\n    };\n\n    this.broadcastToDevTools({\n      type: 'test-cases-generated',\n      test: aiEnhancedTest\n    });\n\n    await this.createTestFile(component.name, testCases);\n  }\n\n  private broadcastToDevTools(message: any) {\n    if (message.type === 'edit-response') {\n      this.outputChannel.appendLine(`Broadcasting edit response: ${JSON.stringify(message)}`);\n    }\n    const messageStr = JSON.stringify(message);\n    this.clients.forEach(client => {\n      if (client.readyState === WebSocket.OPEN) {\n        client.send(messageStr);\n      }\n    });\n  }\n\n  public canHandle(input: string): boolean {\n    return input.startsWith(this.commandPrefix);\n  }\n\n  public async execute(context: AgentContext): Promise<AgentResponse> {\n    this._geminiService = context.geminiService;\n    try {\n      const { prompt } = context;\n      \n      if (!prompt) {\n        return {\n          success: false,\n          message: 'No UI command provided'\n        };\n      }\n\n      const [command, ...args] = prompt.split(' ');\n      \n      switch (command) {\n        case '@ui-analyze':\n          return this.analyzeUI(args.join(' '));\n        case '@ui-fix':\n          return this.fixUIIssue(args.join(' '), context);\n        case '@ui-test':\n          return this.generateUITests(args.join(' '), context);\n        default:\n          return {\n            success: false,\n            message: 'Unknown UI command'\n          };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: `Error in DevToolsAgent: ${error instanceof Error ? error.message : String(error)}`\n      };\n    }\n  }\n\n  private async analyzeUI(target: string): Promise<AgentResponse> {\n    try {\n      const analysis = await this.chromeDevTools.analyzeUI(target);\n      \n      const aiPrompt = `Analyze this UI element and provide improvements:\nElement: ${target}\nCurrent state: ${JSON.stringify(analysis, null, 2)}\n\nProvide specific suggestions for:\n1. Accessibility (WCAG compliance)\n2. UX improvements\n3. Performance optimizations\n4. Best practices`;\n\n      const aiResponse = await this._geminiService.generateResponse([\n        { role: 'system', content: 'You are a UI/UX expert analyzing web applications.' },\n        { role: 'user', content: aiPrompt }\n      ]);\n\n      return {\n        success: true,\n        message: aiResponse,\n        content: JSON.stringify(analysis, null, 2)\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `Error analyzing UI: ${error}`\n      };\n    }\n  }\n\n  private async fixUIIssue(issue: string, context: AgentContext): Promise<AgentResponse> {\n    return {\n      success: true,\n      message: 'UI fix applied'\n    };\n  }\n\n  private async generateUITests(component: string, context: AgentContext): Promise<AgentResponse> {\n    return {\n      success: true,\n      message: 'UI tests generated'\n    };\n  }\n\n  private showDetailedAnalysis(analysis: any) {\n    const panel = vscode.window.createWebviewPanel(\n      'uiAnalysis',\n      'UI Analysis Details',\n      vscode.ViewColumn.Two,\n      { enableScripts: true }\n    );\n\n    panel.webview.html = this.getAnalysisHtml(analysis);\n  }\n\n  private showInProblemsPanel(error: any) {\n    const diagnostic = new vscode.Diagnostic(\n      new vscode.Range(0, 0, 0, 0),\n      error.aiAnalysis,\n      vscode.DiagnosticSeverity.Error\n    );\n    \n    const diagnostics = new Map<string, vscode.Diagnostic[]>();\n    diagnostics.set('DevTools', [diagnostic]);\n    \n    if (!this.diagnosticsCollection) {\n      this.diagnosticsCollection = vscode.languages.createDiagnosticCollection('momo-devtools');\n    }\n     \n    this.diagnosticsCollection.set(vscode.Uri.parse('devtools://errors'), [diagnostic]);\n  }\n\n  private parseTestCases(aiResponse: string): any[] {\n    const testCases = aiResponse.split('\\n')\n      .filter(line => line.startsWith('test'))\n      .map(test => {\n        const [name, ...description] = test.split(':');\n        return { name: name.trim(), description: description.join(':').trim() };\n      });\n\n    return testCases;\n  }\n\n  private async createTestFile(componentName: string, testCases: any[]) {\n    const testFileContent = this.generateTestFileContent(componentName, testCases);\n    const testFilePath = `tests/${componentName}.test.ts`;\n    \n    await vscode.workspace.fs.writeFile(\n      vscode.Uri.file(testFilePath),\n      Buffer.from(testFileContent)\n    );\n  }\n\n  private getAnalysisHtml(analysis: any): string {\n    return `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>UI Analysis</title>\n          <style>\n            body { font-family: var(--vscode-font-family); }\n            .analysis-item { margin: 1em 0; }\n            .timestamp { color: var(--vscode-descriptionForeground); }\n          </style>\n        </head>\n        <body>\n          <h2>UI Analysis Details</h2>\n          <div class=\"timestamp\">Generated: ${analysis.timestamp}</div>\n          <div class=\"analysis-item\">\n            <h3>Element: ${analysis.selector}</h3>\n            <pre>${analysis.aiAnalysis}</pre>\n          </div>\n        </body>\n      </html>\n    `;\n  }\n\n  private generateTestFileContent(componentName: string, testCases: any[]): string {\n    return `\nimport { test, expect } from '@playwright/test';\n\ndescribe('${componentName}', () => {\n  ${testCases.map(tc => `\n  test('${tc.name}', async ({ page }) => {\n    // TODO: Implement test\n    // ${tc.description}\n  });`).join('\\n')}\n});\n`;\n  }\n\n  public dispose() {\n    if (this.wsServer) {\n      this.wsServer.close();\n    }\n    this.outputChannel.dispose();\n    if (this.diagnosticsCollection) {\n      this.diagnosticsCollection.dispose();\n    }\n  }\n}\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Diff;\n\n/*istanbul ignore end*/\nfunction Diff() {}\n\nDiff.prototype = {\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  diff: function diff(oldString, newString) {\n    /*istanbul ignore start*/\n    var _options$timeout;\n\n    var\n    /*istanbul ignore end*/\n    options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n\n    if (options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n\n    var maxExecutionTime =\n    /*istanbul ignore start*/\n    (_options$timeout =\n    /*istanbul ignore end*/\n    options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : Infinity;\n    var abortAfterTimestamp = Date.now() + maxExecutionTime;\n    var bestPath = [{\n      oldPos: -1,\n      lastComponent: undefined\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n\n\n    var minDiagonalToConsider = -Infinity,\n        maxDiagonalToConsider = Infinity; // Main worker method. checks all permutations of a given edit length for acceptance.\n\n    function execEditLength() {\n      for (var diagonalPath = Math.max(minDiagonalToConsider, -editLength); diagonalPath <= Math.min(maxDiagonalToConsider, editLength); diagonalPath += 2) {\n        var basePath =\n        /*istanbul ignore start*/\n        void 0\n        /*istanbul ignore end*/\n        ;\n        var removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = false;\n\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          var addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        var canRemove = removePath && removePath.oldPos + 1 < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n\n\n        if (!canRemove || canAdd && removePath.oldPos + 1 < addPath.oldPos) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  addToPath: function addToPath(path, added, removed, oldPosInc) {\n    var last = path.lastComponent;\n\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {\n          count: last.count + 1,\n          added: added,\n          removed: removed,\n          previousComponent: last.previousComponent\n        }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {\n          count: 1,\n          added: added,\n          removed: removed,\n          previousComponent: last\n        }\n      };\n    }\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {\n        count: commonCount,\n        previousComponent: basePath.lastComponent\n      };\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  castInput: function castInput(value) {\n    return value;\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  var components = [];\n  var nextComponent;\n\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n\n  components.reverse();\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var finalComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof finalComponent.value === 'string' && (finalComponent.added || finalComponent.removed) && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","import * as vscode from 'vscode';\nimport { SidebarProvider } from './providers/SidebarProvider';\nimport { GeminiService } from './services/GeminiService';\nimport { FileService } from './services/FileService';\nimport { DiffService } from './services/DiffService';\nimport { DevToolsAgent } from './agents/DevToolsAgent';\n\nlet outputChannel: vscode.OutputChannel;\n\nexport function activate(context: vscode.ExtensionContext) {\n    console.log('Momo extension is now active!');\n\n    // Register commands\n    let askCommand = vscode.commands.registerCommand('momo.ask', () => {\n        vscode.window.showInformationMessage('Momo Ask Command Triggered');\n    });\n\n    context.subscriptions.push(askCommand);\n\n\t// Create output channel\n\toutputChannel = vscode.window.createOutputChannel('Momo');\n\toutputChannel.show();\n\toutputChannel.appendLine('Activating Momo extension...');\n\n\ttry {\n\t\t// Initialize services\n\t\tconst geminiService = new GeminiService(context);\n\t\tconst fileService = new FileService(context);\n\t\tconst diffService = new DiffService();\n\n\t\t // Initialize DevTools agent\n\t\tconst devToolsAgent = new DevToolsAgent(context);\n\t\tcontext.subscriptions.push(devToolsAgent);\n\n\t\t// Register sidebar webview provider\n\t\tconst sidebarProvider = new SidebarProvider(\n\t\t\tcontext, \n\t\t\tgeminiService, \n\t\t\tfileService, \n\t\t\tdiffService\n\t\t);\n\t\t\n\t\tconst sidebarRegistration = vscode.window.registerWebviewViewProvider(\n\t\t\t'momoSidebar',\n\t\t\tsidebarProvider,\n\t\t\t{\n\t\t\t\twebviewOptions: {\n\t\t\t\t\tretainContextWhenHidden: true\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Register commands\n\t\tconst agentCommand = vscode.commands.registerCommand('momo.agent', () => {\n\t\t\tvscode.commands.executeCommand('workbench.view.extension.momo-sidebar');\n\t\t\tsidebarProvider.setMode('agent');\n\t\t});\n\n\t\tconst applyChangesCommand = vscode.commands.registerCommand('momo.applyChanges', () => {\n\t\t\tdiffService.applyChanges();\n\t\t});\n\n\t\tconst rejectChangesCommand = vscode.commands.registerCommand('momo.rejectChanges', () => {\n\t\t\tdiffService.rejectChanges();\n\t\t});\n\n\t\tconst devToolsCommand = vscode.commands.registerCommand('momo.devtools', () => {\n\t\t\tvscode.commands.executeCommand('workbench.view.extension.momo-sidebar');\n\t\t\tsidebarProvider.setMode('devtools');\n\t\t});\n\n\t\t// Add to subscriptions\n\t\tcontext.subscriptions.push(\n\t\t\tsidebarRegistration,\n\t\t\tagentCommand,\n\t\t\tapplyChangesCommand,\n\t\t\trejectChangesCommand,\n\t\t\tdevToolsCommand,\n\t\t\toutputChannel\n\t\t);\n\n\t\t// Set default API key if provided\n\t\tconst config = vscode.workspace.getConfiguration('momo');\n\t\tif (!config.get('apiKey')) {\n\t\t\tconfig.update('apiKey', 'AIzaSyB4hiLV6LGufxe_FQlH2TnNPZUVyEtTyVA', vscode.ConfigurationTarget.Global);\n\t\t}\n\n\t\t// Show welcome message\n\t\tvscode.window.showInformationMessage('Momo is now active! Click the Momo icon in the activity bar to get started.');\n\t\toutputChannel.appendLine('Momo extension activated successfully!');\n\t} catch (error) {\n\t\toutputChannel.appendLine(`Error activating Momo extension: ${error}`);\n\t\tvscode.window.showErrorMessage(`Failed to activate Momo: ${error}`);\n\t}\n}\n\nexport function deactivate() {\n\toutputChannel?.appendLine('Deactivating Momo extension...');\n\toutputChannel?.dispose();\n}\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffLines = diffLines;\nexports.diffTrimmedLines = diffTrimmedLines;\nexports.lineDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_params = require(\"../util/params\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar lineDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.lineDiff = lineDiff;\n\n/*istanbul ignore end*/\nlineDiff.tokenize = function (value) {\n  if (this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\n\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options =\n  /*istanbul ignore start*/\n  (0,\n  /*istanbul ignore end*/\n\n  /*istanbul ignore start*/\n  _params\n  /*istanbul ignore end*/\n  .\n  /*istanbul ignore start*/\n  generateOptions)\n  /*istanbul ignore end*/\n  (callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2xpbmUuanMiXSwibmFtZXMiOlsibGluZURpZmYiLCJEaWZmIiwidG9rZW5pemUiLCJ2YWx1ZSIsIm9wdGlvbnMiLCJzdHJpcFRyYWlsaW5nQ3IiLCJyZXBsYWNlIiwicmV0TGluZXMiLCJsaW5lc0FuZE5ld2xpbmVzIiwic3BsaXQiLCJsZW5ndGgiLCJwb3AiLCJpIiwibGluZSIsIm5ld2xpbmVJc1Rva2VuIiwiaWdub3JlV2hpdGVzcGFjZSIsInRyaW0iLCJwdXNoIiwiZGlmZkxpbmVzIiwib2xkU3RyIiwibmV3U3RyIiwiY2FsbGJhY2siLCJkaWZmIiwiZGlmZlRyaW1tZWRMaW5lcyIsImdlbmVyYXRlT3B0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7O0FBRU8sSUFBTUEsUUFBUSxHQUFHO0FBQUlDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBLENBQUosRUFBakI7Ozs7OztBQUNQRCxRQUFRLENBQUNFLFFBQVQsR0FBb0IsVUFBU0MsS0FBVCxFQUFnQjtBQUNsQyxNQUFHLEtBQUtDLE9BQUwsQ0FBYUMsZUFBaEIsRUFBaUM7QUFDL0I7QUFDQUYsSUFBQUEsS0FBSyxHQUFHQSxLQUFLLENBQUNHLE9BQU4sQ0FBYyxPQUFkLEVBQXVCLElBQXZCLENBQVI7QUFDRDs7QUFFRCxNQUFJQyxRQUFRLEdBQUcsRUFBZjtBQUFBLE1BQ0lDLGdCQUFnQixHQUFHTCxLQUFLLENBQUNNLEtBQU4sQ0FBWSxXQUFaLENBRHZCLENBTmtDLENBU2xDOztBQUNBLE1BQUksQ0FBQ0QsZ0JBQWdCLENBQUNBLGdCQUFnQixDQUFDRSxNQUFqQixHQUEwQixDQUEzQixDQUFyQixFQUFvRDtBQUNsREYsSUFBQUEsZ0JBQWdCLENBQUNHLEdBQWpCO0FBQ0QsR0FaaUMsQ0FjbEM7OztBQUNBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0osZ0JBQWdCLENBQUNFLE1BQXJDLEVBQTZDRSxDQUFDLEVBQTlDLEVBQWtEO0FBQ2hELFFBQUlDLElBQUksR0FBR0wsZ0JBQWdCLENBQUNJLENBQUQsQ0FBM0I7O0FBRUEsUUFBSUEsQ0FBQyxHQUFHLENBQUosSUFBUyxDQUFDLEtBQUtSLE9BQUwsQ0FBYVUsY0FBM0IsRUFBMkM7QUFDekNQLE1BQUFBLFFBQVEsQ0FBQ0EsUUFBUSxDQUFDRyxNQUFULEdBQWtCLENBQW5CLENBQVIsSUFBaUNHLElBQWpDO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsVUFBSSxLQUFLVCxPQUFMLENBQWFXLGdCQUFqQixFQUFtQztBQUNqQ0YsUUFBQUEsSUFBSSxHQUFHQSxJQUFJLENBQUNHLElBQUwsRUFBUDtBQUNEOztBQUNEVCxNQUFBQSxRQUFRLENBQUNVLElBQVQsQ0FBY0osSUFBZDtBQUNEO0FBQ0Y7O0FBRUQsU0FBT04sUUFBUDtBQUNELENBN0JEOztBQStCTyxTQUFTVyxTQUFULENBQW1CQyxNQUFuQixFQUEyQkMsTUFBM0IsRUFBbUNDLFFBQW5DLEVBQTZDO0FBQUUsU0FBT3JCLFFBQVEsQ0FBQ3NCLElBQVQsQ0FBY0gsTUFBZCxFQUFzQkMsTUFBdEIsRUFBOEJDLFFBQTlCLENBQVA7QUFBaUQ7O0FBQ2hHLFNBQVNFLGdCQUFULENBQTBCSixNQUExQixFQUFrQ0MsTUFBbEMsRUFBMENDLFFBQTFDLEVBQW9EO0FBQ3pELE1BQUlqQixPQUFPO0FBQUc7QUFBQTtBQUFBOztBQUFBb0I7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEdBQWdCSCxRQUFoQixFQUEwQjtBQUFDTixJQUFBQSxnQkFBZ0IsRUFBRTtBQUFuQixHQUExQixDQUFkO0FBQ0EsU0FBT2YsUUFBUSxDQUFDc0IsSUFBVCxDQUFjSCxNQUFkLEVBQXNCQyxNQUF0QixFQUE4QmhCLE9BQTlCLENBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaWZmIGZyb20gJy4vYmFzZSc7XG5pbXBvcnQge2dlbmVyYXRlT3B0aW9uc30gZnJvbSAnLi4vdXRpbC9wYXJhbXMnO1xuXG5leHBvcnQgY29uc3QgbGluZURpZmYgPSBuZXcgRGlmZigpO1xubGluZURpZmYudG9rZW5pemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZih0aGlzLm9wdGlvbnMuc3RyaXBUcmFpbGluZ0NyKSB7XG4gICAgLy8gcmVtb3ZlIG9uZSBcXHIgYmVmb3JlIFxcbiB0byBtYXRjaCBHTlUgZGlmZidzIC0tc3RyaXAtdHJhaWxpbmctY3IgYmVoYXZpb3JcbiAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1xcclxcbi9nLCAnXFxuJyk7XG4gIH1cblxuICBsZXQgcmV0TGluZXMgPSBbXSxcbiAgICAgIGxpbmVzQW5kTmV3bGluZXMgPSB2YWx1ZS5zcGxpdCgvKFxcbnxcXHJcXG4pLyk7XG5cbiAgLy8gSWdub3JlIHRoZSBmaW5hbCBlbXB0eSB0b2tlbiB0aGF0IG9jY3VycyBpZiB0aGUgc3RyaW5nIGVuZHMgd2l0aCBhIG5ldyBsaW5lXG4gIGlmICghbGluZXNBbmROZXdsaW5lc1tsaW5lc0FuZE5ld2xpbmVzLmxlbmd0aCAtIDFdKSB7XG4gICAgbGluZXNBbmROZXdsaW5lcy5wb3AoKTtcbiAgfVxuXG4gIC8vIE1lcmdlIHRoZSBjb250ZW50IGFuZCBsaW5lIHNlcGFyYXRvcnMgaW50byBzaW5nbGUgdG9rZW5zXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZXNBbmROZXdsaW5lcy5sZW5ndGg7IGkrKykge1xuICAgIGxldCBsaW5lID0gbGluZXNBbmROZXdsaW5lc1tpXTtcblxuICAgIGlmIChpICUgMiAmJiAhdGhpcy5vcHRpb25zLm5ld2xpbmVJc1Rva2VuKSB7XG4gICAgICByZXRMaW5lc1tyZXRMaW5lcy5sZW5ndGggLSAxXSArPSBsaW5lO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmlnbm9yZVdoaXRlc3BhY2UpIHtcbiAgICAgICAgbGluZSA9IGxpbmUudHJpbSgpO1xuICAgICAgfVxuICAgICAgcmV0TGluZXMucHVzaChsaW5lKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmV0TGluZXM7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZGlmZkxpbmVzKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjaykgeyByZXR1cm4gbGluZURpZmYuZGlmZihvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spOyB9XG5leHBvcnQgZnVuY3Rpb24gZGlmZlRyaW1tZWRMaW5lcyhvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spIHtcbiAgbGV0IG9wdGlvbnMgPSBnZW5lcmF0ZU9wdGlvbnMoY2FsbGJhY2ssIHtpZ25vcmVXaGl0ZXNwYWNlOiB0cnVlfSk7XG4gIHJldHVybiBsaW5lRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBvcHRpb25zKTtcbn1cbiJdfQ==\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffArrays = diffArrays;\nexports.arrayDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar arrayDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.arrayDiff = arrayDiff;\n\n/*istanbul ignore end*/\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2FycmF5LmpzIl0sIm5hbWVzIjpbImFycmF5RGlmZiIsIkRpZmYiLCJ0b2tlbml6ZSIsInZhbHVlIiwic2xpY2UiLCJqb2luIiwicmVtb3ZlRW1wdHkiLCJkaWZmQXJyYXlzIiwib2xkQXJyIiwibmV3QXJyIiwiY2FsbGJhY2siLCJkaWZmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFFTyxJQUFNQSxTQUFTLEdBQUc7QUFBSUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUEsQ0FBSixFQUFsQjs7Ozs7O0FBQ1BELFNBQVMsQ0FBQ0UsUUFBVixHQUFxQixVQUFTQyxLQUFULEVBQWdCO0FBQ25DLFNBQU9BLEtBQUssQ0FBQ0MsS0FBTixFQUFQO0FBQ0QsQ0FGRDs7QUFHQUosU0FBUyxDQUFDSyxJQUFWLEdBQWlCTCxTQUFTLENBQUNNLFdBQVYsR0FBd0IsVUFBU0gsS0FBVCxFQUFnQjtBQUN2RCxTQUFPQSxLQUFQO0FBQ0QsQ0FGRDs7QUFJTyxTQUFTSSxVQUFULENBQW9CQyxNQUFwQixFQUE0QkMsTUFBNUIsRUFBb0NDLFFBQXBDLEVBQThDO0FBQUUsU0FBT1YsU0FBUyxDQUFDVyxJQUFWLENBQWVILE1BQWYsRUFBdUJDLE1BQXZCLEVBQStCQyxRQUEvQixDQUFQO0FBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGNvbnN0IGFycmF5RGlmZiA9IG5ldyBEaWZmKCk7XG5hcnJheURpZmYudG9rZW5pemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUuc2xpY2UoKTtcbn07XG5hcnJheURpZmYuam9pbiA9IGFycmF5RGlmZi5yZW1vdmVFbXB0eSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQXJyYXlzKG9sZEFyciwgbmV3QXJyLCBjYWxsYmFjaykgeyByZXR1cm4gYXJyYXlEaWZmLmRpZmYob2xkQXJyLCBuZXdBcnIsIGNhbGxiYWNrKTsgfVxuIl19\n","import { BaseAgent, AgentContext, AgentResponse } from './BaseAgent';\nimport * as path from 'path';\nimport * as vscode from 'vscode';\nimport * as diff from 'diff';\n\ninterface EditOperation {\n  type: 'insert' | 'replace' | 'delete';\n  range: vscode.Range;\n  text?: string;\n}\n\ninterface EditTarget {\n  type: 'function' | 'class' | 'method' | 'section' | 'line' | 'general';\n  identifier?: string;\n  lineRange?: { start: number; end: number };\n  description: string;\n}\n\nexport class EditAgent implements BaseAgent {\n  id = 'edit-agent';\n  name = 'Edit Agent';\n  description = 'Intelligently edits files using LLM';\n  commandPrefix = '#';\n\n  canHandle(input: string): boolean {\n    return input.startsWith(this.commandPrefix);\n  }\n\n  async execute(context: AgentContext): Promise<AgentResponse> {\n    try {\n      const { filePath, prompt, geminiService, diffService } = context;\n      \n      if (!filePath) {\n        return {\n          success: false,\n          message: 'Missing file path'\n        };\n      }\n\n      // Remove # prefix if present\n      const cleanFilePath = filePath.startsWith('#') ? filePath.substring(1) : filePath;\n\n      // Get workspace folder\n      const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\n      if (!workspaceFolder) {\n        return {\n          success: false,\n          message: 'No workspace folder is open'\n        };\n      }\n\n      // Get the full file URI\n      const fileUri = vscode.Uri.joinPath(workspaceFolder.uri, cleanFilePath);\n\n      // Try to open the document\n      let document: vscode.TextDocument;\n      try {\n        document = await vscode.workspace.openTextDocument(fileUri);\n      } catch (error) {\n        return {\n          success: false,\n          message: `Cannot open file ${cleanFilePath}: ${error instanceof Error ? error.message : String(error)}`\n        };\n      }\n\n      const originalContent = document.getText();\n\n      // Generate edit context\n      const editContext = this.createEditContext(cleanFilePath, originalContent, prompt || '');\n      \n      // Get LLM response\n      const llmResponse = await geminiService.generateResponse([\n        { role: 'user', content: editContext }\n      ]);\n\n      // Extract code blocks\n      const codeBlocks = this.extractCodeBlocks(llmResponse);\n      if (codeBlocks.length === 0) {\n        return {\n          success: false,\n          message: \"No code blocks found in the LLM response.\"\n        };\n      }\n\n      // Get the largest code block as the main edit suggestion\n      const newContent = codeBlocks.reduce(\n        (longest, current) => (current.length > longest.length ? current : longest),\n        \"\"\n      );\n\n      // Show diff and store pending changes\n      diffService.showDiff(cleanFilePath, originalContent, newContent);\n\n      // Try to apply the edit\n      const editor = await vscode.window.showTextDocument(document);\n      await editor.edit(editBuilder => {\n        const fullRange = new vscode.Range(\n          document.positionAt(0),\n          document.positionAt(document.getText().length)\n        );\n        editBuilder.replace(fullRange, newContent);\n      });\n\n      return {\n        success: true,\n        message: `Changes proposed for ${cleanFilePath}. Please review the diff and apply or reject the changes.`,\n        content: newContent\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `Error in EditAgent: ${error instanceof Error ? error.message : String(error)}`\n      };\n    }\n  }\n\n  private extractCodeBlocks(llmResponse: string): string[] {\n    const codeBlockRegex = /```(?:[\\w-]*\\n)?([\\s\\S]*?)```/g;\n    const codeBlocks: string[] = [];\n    let match;\n\n    while ((match = codeBlockRegex.exec(llmResponse)) !== null) {\n      // Clean up the code block by removing marker comments\n      const cleanedCode = match[1].trim()\n        .replace(/\\/\\/ \\.\\.\\. existing code \\.\\.\\.\\n?/g, '')\n        .replace(/\\/\\* \\.\\.\\. existing code \\.\\.\\. \\*\\/\\n?/g, '')\n        .replace(/<!-- \\.\\.\\. existing code \\.\\.\\. -->\\n?/g, '');\n      \n      codeBlocks.push(cleanedCode);\n    }\n\n    return codeBlocks;\n  }\n\n  private resolveFilePath(filePath: string): vscode.Uri {\n    // If it's an absolute path, use it directly\n    if (path.isAbsolute(filePath)) {\n      return vscode.Uri.file(filePath);\n    }\n    \n    // Otherwise, resolve relative to workspace root\n    const workspaceFolders = vscode.workspace.workspaceFolders;\n    if (!workspaceFolders || workspaceFolders.length === 0) {\n      throw new Error('No workspace folder is open');\n    }\n    \n    return vscode.Uri.joinPath(workspaceFolders[0].uri, filePath);\n  }\n\n  private createEditContext(filePath: string, originalContent: string, prompt: string): string {\n    const fileExtension = path.extname(filePath).toLowerCase();\n    const editTarget = this.parseEditTarget(prompt, originalContent);\n    \n    let targetInstructions = '';\n    if (editTarget.type !== 'general') {\n      targetInstructions = `\\nTarget: ${editTarget.description}\nSpecific instructions:\n- Focus changes only on the specified ${editTarget.type}\n- Preserve all code outside the target area\n- Use markers to clearly indicate the boundaries of your changes\n- If the target doesn't exist, add it in an appropriate location\\n`;\n    }\n    \n    // Include file extension in LLM context but not in preview\n    return `\nFile to edit: ${filePath}\nFile extension: ${fileExtension}\nCurrent content:\n\\`\\`\\`\n${originalContent}\n\\`\\`\\`\n\nEdit request: ${prompt}${targetInstructions}\n\nInstructions for editing:\n1. Preserve code structure:\n   - Keep all imports, declarations, and dependencies\n   - Maintain proper indentation and formatting\n   - Preserve critical language constructs\n\n2. Editing guidelines:\n   - Make changes only to the specified target area\n   - Keep the overall file structure intact\n   - Match the style and indentation of the original code\n   - Add clear comments explaining significant changes\n   - Return response without file extension in code blocks\n\nPlease provide the complete file content with your edits.`;\n  }\n\n  private sanitizeCodeBlock(codeBlock: string, fileExtension: string): string {\n    // Remove any language identifier from code blocks\n    return codeBlock.replace(new RegExp(`\\`\\`\\`${fileExtension}\\\\n`), '```\\n');\n  }\n\n  private parseEditTarget(prompt: string, originalContent: string): EditTarget {\n    // Check for line number references (e.g., \"line 5\", \"lines 10-20\")\n    const lineRangeMatch = prompt.match(/lines? (\\d+)(?:-(\\d+))?/i);\n    if (lineRangeMatch) {\n      const start = parseInt(lineRangeMatch[1]);\n      const end = lineRangeMatch[2] ? parseInt(lineRangeMatch[2]) : start;\n      return {\n        type: 'line',\n        lineRange: { start, end },\n        description: `Lines ${start}${end !== start ? `-${end}` : ''}`\n      };\n    }\n\n    // Check for function references\n    const functionMatch = prompt.match(/function\\s+(\\w+)/i) || prompt.match(/the\\s+(\\w+)\\s+function/i);\n    if (functionMatch) {\n      return {\n        type: 'function',\n        identifier: functionMatch[1],\n        description: `Function ${functionMatch[1]}`\n      };\n    }\n\n    // Check for method references\n    const methodMatch = prompt.match(/method\\s+(\\w+)/i) || prompt.match(/the\\s+(\\w+)\\s+method/i);\n    if (methodMatch) {\n      return {\n        type: 'method',\n        identifier: methodMatch[1],\n        description: `Method ${methodMatch[1]}`\n      }; \n    }\n\n    // Check for class references\n    const classMatch = prompt.match(/class\\s+(\\w+)/i) || prompt.match(/the\\s+(\\w+)\\s+class/i);\n    if (classMatch) {\n      return {\n        type: 'class',\n        identifier: classMatch[1],\n        description: `Class ${classMatch[1]}`\n      };\n    }\n\n    // Check for section references (e.g., \"imports section\", \"constructor section\")\n    const sectionMatch = prompt.match(/(\\w+)\\s+section/i);\n    if (sectionMatch) {\n      return {\n        type: 'section',\n        identifier: sectionMatch[1].toLowerCase(),\n        description: `${sectionMatch[1]} section`\n      };\n    }\n\n    // Default to general edit\n    return {\n      type: 'general',\n      description: 'General edit'\n    };\n  }\n\n  private async getOrCreateDocument(filePath: string): Promise<vscode.TextDocument> {\n    const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\n    if (!workspaceFolder) {\n      throw new Error('No workspace folder is open');\n    }\n\n    const fileUri = vscode.Uri.joinPath(workspaceFolder.uri, filePath);\n    \n    try {\n      return await vscode.workspace.openTextDocument(fileUri);\n    } catch (error) {\n      // File doesn't exist, create it\n      await vscode.workspace.fs.writeFile(fileUri, new Uint8Array());\n      return await vscode.workspace.openTextDocument(fileUri);\n    }\n  }\n}","module.exports = require(\"vscode\");","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffWords = diffWords;\nexports.diffWordsWithSpace = diffWordsWithSpace;\nexports.wordDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_params = require(\"../util/params\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.wordDiff = wordDiff;\n\n/*istanbul ignore end*/\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options =\n  /*istanbul ignore start*/\n  (0,\n  /*istanbul ignore end*/\n\n  /*istanbul ignore start*/\n  _params\n  /*istanbul ignore end*/\n  .\n  /*istanbul ignore start*/\n  generateOptions)\n  /*istanbul ignore end*/\n  (options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL3dvcmQuanMiXSwibmFtZXMiOlsiZXh0ZW5kZWRXb3JkQ2hhcnMiLCJyZVdoaXRlc3BhY2UiLCJ3b3JkRGlmZiIsIkRpZmYiLCJlcXVhbHMiLCJsZWZ0IiwicmlnaHQiLCJvcHRpb25zIiwiaWdub3JlQ2FzZSIsInRvTG93ZXJDYXNlIiwiaWdub3JlV2hpdGVzcGFjZSIsInRlc3QiLCJ0b2tlbml6ZSIsInZhbHVlIiwidG9rZW5zIiwic3BsaXQiLCJpIiwibGVuZ3RoIiwic3BsaWNlIiwiZGlmZldvcmRzIiwib2xkU3RyIiwibmV3U3RyIiwiZ2VuZXJhdGVPcHRpb25zIiwiZGlmZiIsImRpZmZXb3Jkc1dpdGhTcGFjZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsaUJBQWlCLEdBQUcsK0RBQTFCO0FBRUEsSUFBTUMsWUFBWSxHQUFHLElBQXJCO0FBRU8sSUFBTUMsUUFBUSxHQUFHO0FBQUlDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBLENBQUosRUFBakI7Ozs7OztBQUNQRCxRQUFRLENBQUNFLE1BQVQsR0FBa0IsVUFBU0MsSUFBVCxFQUFlQyxLQUFmLEVBQXNCO0FBQ3RDLE1BQUksS0FBS0MsT0FBTCxDQUFhQyxVQUFqQixFQUE2QjtBQUMzQkgsSUFBQUEsSUFBSSxHQUFHQSxJQUFJLENBQUNJLFdBQUwsRUFBUDtBQUNBSCxJQUFBQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ0csV0FBTixFQUFSO0FBQ0Q7O0FBQ0QsU0FBT0osSUFBSSxLQUFLQyxLQUFULElBQW1CLEtBQUtDLE9BQUwsQ0FBYUcsZ0JBQWIsSUFBaUMsQ0FBQ1QsWUFBWSxDQUFDVSxJQUFiLENBQWtCTixJQUFsQixDQUFsQyxJQUE2RCxDQUFDSixZQUFZLENBQUNVLElBQWIsQ0FBa0JMLEtBQWxCLENBQXhGO0FBQ0QsQ0FORDs7QUFPQUosUUFBUSxDQUFDVSxRQUFULEdBQW9CLFVBQVNDLEtBQVQsRUFBZ0I7QUFDbEM7QUFDQSxNQUFJQyxNQUFNLEdBQUdELEtBQUssQ0FBQ0UsS0FBTixDQUFZLGlDQUFaLENBQWIsQ0FGa0MsQ0FJbEM7O0FBQ0EsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixNQUFNLENBQUNHLE1BQVAsR0FBZ0IsQ0FBcEMsRUFBdUNELENBQUMsRUFBeEMsRUFBNEM7QUFDMUM7QUFDQSxRQUFJLENBQUNGLE1BQU0sQ0FBQ0UsQ0FBQyxHQUFHLENBQUwsQ0FBUCxJQUFrQkYsTUFBTSxDQUFDRSxDQUFDLEdBQUcsQ0FBTCxDQUF4QixJQUNLaEIsaUJBQWlCLENBQUNXLElBQWxCLENBQXVCRyxNQUFNLENBQUNFLENBQUQsQ0FBN0IsQ0FETCxJQUVLaEIsaUJBQWlCLENBQUNXLElBQWxCLENBQXVCRyxNQUFNLENBQUNFLENBQUMsR0FBRyxDQUFMLENBQTdCLENBRlQsRUFFZ0Q7QUFDOUNGLE1BQUFBLE1BQU0sQ0FBQ0UsQ0FBRCxDQUFOLElBQWFGLE1BQU0sQ0FBQ0UsQ0FBQyxHQUFHLENBQUwsQ0FBbkI7QUFDQUYsTUFBQUEsTUFBTSxDQUFDSSxNQUFQLENBQWNGLENBQUMsR0FBRyxDQUFsQixFQUFxQixDQUFyQjtBQUNBQSxNQUFBQSxDQUFDO0FBQ0Y7QUFDRjs7QUFFRCxTQUFPRixNQUFQO0FBQ0QsQ0FqQkQ7O0FBbUJPLFNBQVNLLFNBQVQsQ0FBbUJDLE1BQW5CLEVBQTJCQyxNQUEzQixFQUFtQ2QsT0FBbkMsRUFBNEM7QUFDakRBLEVBQUFBLE9BQU87QUFBRztBQUFBO0FBQUE7O0FBQUFlO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQSxHQUFnQmYsT0FBaEIsRUFBeUI7QUFBQ0csSUFBQUEsZ0JBQWdCLEVBQUU7QUFBbkIsR0FBekIsQ0FBVjtBQUNBLFNBQU9SLFFBQVEsQ0FBQ3FCLElBQVQsQ0FBY0gsTUFBZCxFQUFzQkMsTUFBdEIsRUFBOEJkLE9BQTlCLENBQVA7QUFDRDs7QUFFTSxTQUFTaUIsa0JBQVQsQ0FBNEJKLE1BQTVCLEVBQW9DQyxNQUFwQyxFQUE0Q2QsT0FBNUMsRUFBcUQ7QUFDMUQsU0FBT0wsUUFBUSxDQUFDcUIsSUFBVCxDQUFjSCxNQUFkLEVBQXNCQyxNQUF0QixFQUE4QmQsT0FBOUIsQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcbmltcG9ydCB7Z2VuZXJhdGVPcHRpb25zfSBmcm9tICcuLi91dGlsL3BhcmFtcyc7XG5cbi8vIEJhc2VkIG9uIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xhdGluX3NjcmlwdF9pbl9Vbmljb2RlXG4vL1xuLy8gUmFuZ2VzIGFuZCBleGNlcHRpb25zOlxuLy8gTGF0aW4tMSBTdXBwbGVtZW50LCAwMDgw4oCTMDBGRlxuLy8gIC0gVSswMEQ3ICDDlyBNdWx0aXBsaWNhdGlvbiBzaWduXG4vLyAgLSBVKzAwRjcgIMO3IERpdmlzaW9uIHNpZ25cbi8vIExhdGluIEV4dGVuZGVkLUEsIDAxMDDigJMwMTdGXG4vLyBMYXRpbiBFeHRlbmRlZC1CLCAwMTgw4oCTMDI0RlxuLy8gSVBBIEV4dGVuc2lvbnMsIDAyNTDigJMwMkFGXG4vLyBTcGFjaW5nIE1vZGlmaWVyIExldHRlcnMsIDAyQjDigJMwMkZGXG4vLyAgLSBVKzAyQzcgIMuHICYjNzExOyAgQ2Fyb25cbi8vICAtIFUrMDJEOCAgy5ggJiM3Mjg7ICBCcmV2ZVxuLy8gIC0gVSswMkQ5ICDLmSAmIzcyOTsgIERvdCBBYm92ZVxuLy8gIC0gVSswMkRBICDLmiAmIzczMDsgIFJpbmcgQWJvdmVcbi8vICAtIFUrMDJEQiAgy5sgJiM3MzE7ICBPZ29uZWtcbi8vICAtIFUrMDJEQyAgy5wgJiM3MzI7ICBTbWFsbCBUaWxkZVxuLy8gIC0gVSswMkREICDLnSAmIzczMzsgIERvdWJsZSBBY3V0ZSBBY2NlbnRcbi8vIExhdGluIEV4dGVuZGVkIEFkZGl0aW9uYWwsIDFFMDDigJMxRUZGXG5jb25zdCBleHRlbmRlZFdvcmRDaGFycyA9IC9eW2EtekEtWlxcdXtDMH0tXFx1e0ZGfVxcdXtEOH0tXFx1e0Y2fVxcdXtGOH0tXFx1ezJDNn1cXHV7MkM4fS1cXHV7MkQ3fVxcdXsyREV9LVxcdXsyRkZ9XFx1ezFFMDB9LVxcdXsxRUZGfV0rJC91O1xuXG5jb25zdCByZVdoaXRlc3BhY2UgPSAvXFxTLztcblxuZXhwb3J0IGNvbnN0IHdvcmREaWZmID0gbmV3IERpZmYoKTtcbndvcmREaWZmLmVxdWFscyA9IGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7XG4gIGlmICh0aGlzLm9wdGlvbnMuaWdub3JlQ2FzZSkge1xuICAgIGxlZnQgPSBsZWZ0LnRvTG93ZXJDYXNlKCk7XG4gICAgcmlnaHQgPSByaWdodC50b0xvd2VyQ2FzZSgpO1xuICB9XG4gIHJldHVybiBsZWZ0ID09PSByaWdodCB8fCAodGhpcy5vcHRpb25zLmlnbm9yZVdoaXRlc3BhY2UgJiYgIXJlV2hpdGVzcGFjZS50ZXN0KGxlZnQpICYmICFyZVdoaXRlc3BhY2UudGVzdChyaWdodCkpO1xufTtcbndvcmREaWZmLnRva2VuaXplID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgLy8gQWxsIHdoaXRlc3BhY2Ugc3ltYm9scyBleGNlcHQgbmV3bGluZSBncm91cCBpbnRvIG9uZSB0b2tlbiwgZWFjaCBuZXdsaW5lIC0gaW4gc2VwYXJhdGUgdG9rZW5cbiAgbGV0IHRva2VucyA9IHZhbHVlLnNwbGl0KC8oW15cXFNcXHJcXG5dK3xbKClbXFxde30nXCJcXHJcXG5dfFxcYikvKTtcblxuICAvLyBKb2luIHRoZSBib3VuZGFyeSBzcGxpdHMgdGhhdCB3ZSBkbyBub3QgY29uc2lkZXIgdG8gYmUgYm91bmRhcmllcy4gVGhpcyBpcyBwcmltYXJpbHkgdGhlIGV4dGVuZGVkIExhdGluIGNoYXJhY3RlciBzZXQuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aCAtIDE7IGkrKykge1xuICAgIC8vIElmIHdlIGhhdmUgYW4gZW1wdHkgc3RyaW5nIGluIHRoZSBuZXh0IGZpZWxkIGFuZCB3ZSBoYXZlIG9ubHkgd29yZCBjaGFycyBiZWZvcmUgYW5kIGFmdGVyLCBtZXJnZVxuICAgIGlmICghdG9rZW5zW2kgKyAxXSAmJiB0b2tlbnNbaSArIDJdXG4gICAgICAgICAgJiYgZXh0ZW5kZWRXb3JkQ2hhcnMudGVzdCh0b2tlbnNbaV0pXG4gICAgICAgICAgJiYgZXh0ZW5kZWRXb3JkQ2hhcnMudGVzdCh0b2tlbnNbaSArIDJdKSkge1xuICAgICAgdG9rZW5zW2ldICs9IHRva2Vuc1tpICsgMl07XG4gICAgICB0b2tlbnMuc3BsaWNlKGkgKyAxLCAyKTtcbiAgICAgIGktLTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdG9rZW5zO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZXb3JkcyhvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucykge1xuICBvcHRpb25zID0gZ2VuZXJhdGVPcHRpb25zKG9wdGlvbnMsIHtpZ25vcmVXaGl0ZXNwYWNlOiB0cnVlfSk7XG4gIHJldHVybiB3b3JkRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBvcHRpb25zKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZXb3Jkc1dpdGhTcGFjZShvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucykge1xuICByZXR1cm4gd29yZERpZmYuZGlmZihvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucyk7XG59XG4iXX0=\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\n/*istanbul ignore end*/\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction\n/*istanbul ignore start*/\n_default\n/*istanbul ignore end*/\n(start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2Rpc3RhbmNlLWl0ZXJhdG9yLmpzIl0sIm5hbWVzIjpbInN0YXJ0IiwibWluTGluZSIsIm1heExpbmUiLCJ3YW50Rm9yd2FyZCIsImJhY2t3YXJkRXhoYXVzdGVkIiwiZm9yd2FyZEV4aGF1c3RlZCIsImxvY2FsT2Zmc2V0IiwiaXRlcmF0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNlO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBU0EsS0FBVCxFQUFnQkMsT0FBaEIsRUFBeUJDLE9BQXpCLEVBQWtDO0FBQy9DLE1BQUlDLFdBQVcsR0FBRyxJQUFsQjtBQUFBLE1BQ0lDLGlCQUFpQixHQUFHLEtBRHhCO0FBQUEsTUFFSUMsZ0JBQWdCLEdBQUcsS0FGdkI7QUFBQSxNQUdJQyxXQUFXLEdBQUcsQ0FIbEI7QUFLQSxTQUFPLFNBQVNDLFFBQVQsR0FBb0I7QUFDekIsUUFBSUosV0FBVyxJQUFJLENBQUNFLGdCQUFwQixFQUFzQztBQUNwQyxVQUFJRCxpQkFBSixFQUF1QjtBQUNyQkUsUUFBQUEsV0FBVztBQUNaLE9BRkQsTUFFTztBQUNMSCxRQUFBQSxXQUFXLEdBQUcsS0FBZDtBQUNELE9BTG1DLENBT3BDO0FBQ0E7OztBQUNBLFVBQUlILEtBQUssR0FBR00sV0FBUixJQUF1QkosT0FBM0IsRUFBb0M7QUFDbEMsZUFBT0ksV0FBUDtBQUNEOztBQUVERCxNQUFBQSxnQkFBZ0IsR0FBRyxJQUFuQjtBQUNEOztBQUVELFFBQUksQ0FBQ0QsaUJBQUwsRUFBd0I7QUFDdEIsVUFBSSxDQUFDQyxnQkFBTCxFQUF1QjtBQUNyQkYsUUFBQUEsV0FBVyxHQUFHLElBQWQ7QUFDRCxPQUhxQixDQUt0QjtBQUNBOzs7QUFDQSxVQUFJRixPQUFPLElBQUlELEtBQUssR0FBR00sV0FBdkIsRUFBb0M7QUFDbEMsZUFBTyxDQUFDQSxXQUFXLEVBQW5CO0FBQ0Q7O0FBRURGLE1BQUFBLGlCQUFpQixHQUFHLElBQXBCO0FBQ0EsYUFBT0csUUFBUSxFQUFmO0FBQ0QsS0E5QndCLENBZ0N6QjtBQUNBOztBQUNELEdBbENEO0FBbUNEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSXRlcmF0b3IgdGhhdCB0cmF2ZXJzZXMgaW4gdGhlIHJhbmdlIG9mIFttaW4sIG1heF0sIHN0ZXBwaW5nXG4vLyBieSBkaXN0YW5jZSBmcm9tIGEgZ2l2ZW4gc3RhcnQgcG9zaXRpb24uIEkuZS4gZm9yIFswLCA0XSwgd2l0aFxuLy8gc3RhcnQgb2YgMiwgdGhpcyB3aWxsIGl0ZXJhdGUgMiwgMywgMSwgNCwgMC5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0YXJ0LCBtaW5MaW5lLCBtYXhMaW5lKSB7XG4gIGxldCB3YW50Rm9yd2FyZCA9IHRydWUsXG4gICAgICBiYWNrd2FyZEV4aGF1c3RlZCA9IGZhbHNlLFxuICAgICAgZm9yd2FyZEV4aGF1c3RlZCA9IGZhbHNlLFxuICAgICAgbG9jYWxPZmZzZXQgPSAxO1xuXG4gIHJldHVybiBmdW5jdGlvbiBpdGVyYXRvcigpIHtcbiAgICBpZiAod2FudEZvcndhcmQgJiYgIWZvcndhcmRFeGhhdXN0ZWQpIHtcbiAgICAgIGlmIChiYWNrd2FyZEV4aGF1c3RlZCkge1xuICAgICAgICBsb2NhbE9mZnNldCsrO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FudEZvcndhcmQgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdHJ5aW5nIHRvIGZpdCBiZXlvbmQgdGV4dCBsZW5ndGgsIGFuZCBpZiBub3QsIGNoZWNrIGl0IGZpdHNcbiAgICAgIC8vIGFmdGVyIG9mZnNldCBsb2NhdGlvbiAob3IgZGVzaXJlZCBsb2NhdGlvbiBvbiBmaXJzdCBpdGVyYXRpb24pXG4gICAgICBpZiAoc3RhcnQgKyBsb2NhbE9mZnNldCA8PSBtYXhMaW5lKSB7XG4gICAgICAgIHJldHVybiBsb2NhbE9mZnNldDtcbiAgICAgIH1cblxuICAgICAgZm9yd2FyZEV4aGF1c3RlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKCFiYWNrd2FyZEV4aGF1c3RlZCkge1xuICAgICAgaWYgKCFmb3J3YXJkRXhoYXVzdGVkKSB7XG4gICAgICAgIHdhbnRGb3J3YXJkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdHJ5aW5nIHRvIGZpdCBiZWZvcmUgdGV4dCBiZWdpbm5pbmcsIGFuZCBpZiBub3QsIGNoZWNrIGl0IGZpdHNcbiAgICAgIC8vIGJlZm9yZSBvZmZzZXQgbG9jYXRpb25cbiAgICAgIGlmIChtaW5MaW5lIDw9IHN0YXJ0IC0gbG9jYWxPZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIC1sb2NhbE9mZnNldCsrO1xuICAgICAgfVxuXG4gICAgICBiYWNrd2FyZEV4aGF1c3RlZCA9IHRydWU7XG4gICAgICByZXR1cm4gaXRlcmF0b3IoKTtcbiAgICB9XG5cbiAgICAvLyBXZSB0cmllZCB0byBmaXQgaHVuayBiZWZvcmUgdGV4dCBiZWdpbm5pbmcgYW5kIGJleW9uZCB0ZXh0IGxlbmd0aCwgdGhlblxuICAgIC8vIGh1bmsgY2FuJ3QgZml0IG9uIHRoZSB0ZXh0LiBSZXR1cm4gdW5kZWZpbmVkXG4gIH07XG59XG4iXX0=\n","'use strict';\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nexports.HarmCategory = void 0;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n})(exports.HarmCategory || (exports.HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nexports.HarmBlockThreshold = void 0;\n(function (HarmBlockThreshold) {\n    // Threshold is unspecified.\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    // Content with NEGLIGIBLE will be allowed.\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    // Content with NEGLIGIBLE and LOW will be allowed.\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    // Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed.\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    // All content will be allowed.\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(exports.HarmBlockThreshold || (exports.HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nexports.HarmProbability = void 0;\n(function (HarmProbability) {\n    // Probability is unspecified.\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    // Content has a negligible chance of being unsafe.\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    // Content has a low chance of being unsafe.\n    HarmProbability[\"LOW\"] = \"LOW\";\n    // Content has a medium chance of being unsafe.\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    // Content has a high chance of being unsafe.\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(exports.HarmProbability || (exports.HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nexports.BlockReason = void 0;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(exports.BlockReason || (exports.BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nexports.FinishReason = void 0;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(exports.FinishReason || (exports.FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nexports.TaskType = void 0;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(exports.TaskType || (exports.TaskType = {}));\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst API_VERSION = \"v1\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.2.1\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n    }\n    toString() {\n        let url = `${BASE_URL}/${API_VERSION}/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders() {\n    return `${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`;\n}\nasync function makeRequest(url, body, requestOptions) {\n    let response;\n    try {\n        response = await fetch(url.toString(), Object.assign(Object.assign({}, buildFetchOptions(requestOptions)), { method: \"POST\", headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-goog-api-client\": getClientHeaders(),\n                \"x-goog-api-key\": url.apiKey,\n            }, body }));\n        if (!response.ok) {\n            let message = \"\";\n            try {\n                const json = await response.json();\n                message = json.error.message;\n                if (json.error.details) {\n                    message += ` ${JSON.stringify(json.error.details)}`;\n                }\n            }\n            catch (e) {\n                // ignored\n            }\n            throw new Error(`[${response.status} ${response.statusText}] ${message}`);\n        }\n    }\n    catch (e) {\n        const err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n        throw err;\n    }\n    return response;\n}\n/**\n * Generates the request options to be passed to the fetch API.\n * @param requestOptions - The user-defined request options.\n * @returns The generated request options.\n */\nfunction buildFetchOptions(requestOptions) {\n    const fetchOptions = {};\n    if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n        const abortController = new AbortController();\n        const signal = abortController.signal;\n        setTimeout(() => abortController.abort(), requestOptions.timeout);\n        fetchOptions.signal = signal;\n    }\n    return fetchOptions;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    return response;\n}\n/**\n * Returns text of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    if ((_d = (_c = (_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.text) {\n        return response.candidates[0].content.parts[0].text;\n    }\n    else {\n        return \"\";\n    }\n}\nconst badFinishReasons = [exports.FinishReason.RECITATION, exports.FinishReason.SAFETY];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader.read().then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            for (const candidate of response.candidates) {\n                const i = candidate.index;\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[i]) {\n                    aggregatedResponse.candidates[i] = {\n                        index: candidate.index,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[i].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[i].finishReason = candidate.finishReason;\n                aggregatedResponse.candidates[i].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[i].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[i].content) {\n                        aggregatedResponse.candidates[i].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [{ text: \"\" }],\n                        };\n                    }\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            aggregatedResponse.candidates[i].content.parts[0].text +=\n                                part.text;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true);\n    const response = await makeRequest(url, JSON.stringify(params), requestOptions);\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false);\n    const response = await makeRequest(url, JSON.stringify(params), requestOptions);\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatNewContent(request, role) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return { role, parts: newParts };\n}\nfunction formatGenerateContentInput(params) {\n    if (params.contents) {\n        return params;\n    }\n    else {\n        const content = formatNewContent(params, \"user\");\n        return { contents: [content] };\n    }\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params, \"user\");\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params, requestOptions) {\n        this.model = model;\n        this.params = params;\n        this.requestOptions = requestOptions;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            this._history = params.history.map((content) => {\n                if (!content.role) {\n                    throw new Error(\"Missing role for history item: \" + JSON.stringify(content));\n                }\n                return formatNewContent(content.parts, content.role);\n            });\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}\n     */\n    async sendMessage(request) {\n        var _a, _b;\n        await this._sendPromise;\n        const newContent = formatNewContent(request, \"user\");\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            contents: [...this._history, newContent],\n        };\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest, this.requestOptions))\n            .then((result) => {\n            var _a;\n            if (result.response.candidates &&\n                result.response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     */\n    async sendMessageStream(request) {\n        var _a, _b;\n        await this._sendPromise;\n        const newContent = formatNewContent(request, \"user\");\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            contents: [...this._history, newContent],\n        };\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest, this.requestOptions);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (response.candidates && response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.COUNT_TOKENS, apiKey, false);\n    const response = await makeRequest(url, JSON.stringify(Object.assign(Object.assign({}, params), { model })), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.EMBED_CONTENT, apiKey, false);\n    const response = await makeRequest(url, JSON.stringify(params), requestOptions);\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params, requestOptions) {\n    const url = new RequestUrl(model, Task.BATCH_EMBED_CONTENTS, apiKey, false);\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model });\n    });\n    const response = await makeRequest(url, JSON.stringify({ requests: requestsWithModel }), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams, requestOptions) {\n        this.apiKey = apiKey;\n        if (modelParams.model.includes(\"/\")) {\n            // Models may be named \"models/model-name\" or \"tunedModels/model-name\"\n            this.model = modelParams.model;\n        }\n        else {\n            // If path is not included, assume it's a non-tuned model.\n            this.model = `models/${modelParams.model}`;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n        this.requestOptions = requestOptions || {};\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     */\n    async generateContent(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings }, formattedParams), this.requestOptions);\n    }\n    /**\n     * Makes a single streaming call to the model\n     * and returns an object containing an iterable stream that iterates\n     * over all chunks in the streaming response as well as\n     * a promise that returns the final aggregated response.\n     */\n    async generateContentStream(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings }, formattedParams), this.requestOptions);\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        return new ChatSession(this.apiKey, this.model, startChatParams, this.requestOptions);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     */\n    async countTokens(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return countTokens(this.apiKey, this.model, formattedParams);\n    }\n    /**\n     * Embeds the provided content.\n     */\n    async embedContent(request) {\n        const formattedParams = formatEmbedContentInput(request);\n        return embedContent(this.apiKey, this.model, formattedParams);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     */\n    async batchEmbedContents(batchEmbedContentRequest) {\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest, this.requestOptions);\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams, requestOptions) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams, requestOptions);\n    }\n}\n\nexports.ChatSession = ChatSession;\nexports.GenerativeModel = GenerativeModel;\nexports.GoogleGenerativeAI = GoogleGenerativeAI;\n//# sourceMappingURL=index.js.map\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyPatch = applyPatch;\nexports.applyPatches = applyPatches;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_parse = require(\"./parse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_distanceIterator = _interopRequireDefault(require(\"../util/distance-iterator\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nfunction applyPatch(source, uniDiff) {\n  /*istanbul ignore start*/\n  var\n  /*istanbul ignore end*/\n  options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff =\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _parse\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    parsePatch)\n    /*istanbul ignore end*/\n    (uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent)\n  /*istanbul ignore start*/\n  {\n    return (\n      /*istanbul ignore end*/\n      line === patchContent\n    );\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator =\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _distanceIterator\n    /*istanbul ignore end*/\n    [\n    /*istanbul ignore start*/\n    \"default\"\n    /*istanbul ignore end*/\n    ])(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters && _hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff =\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _parse\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    parsePatch)\n    /*istanbul ignore end*/\n    (uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","import * as vscode from 'vscode';\nimport { BaseAgent } from './BaseAgent';\nimport { DevToolsAgent } from './DevToolsAgent';\nimport { RunAgent } from './RunAgent';\n\nexport class AgentRegistry {\n  private static instance: AgentRegistry;\n  private agents: Map<string, BaseAgent> = new Map();\n  private context: vscode.ExtensionContext;\n\n  private constructor(context: vscode.ExtensionContext) {\n    this.context = context;\n    this.registerBuiltinAgents();\n  }\n\n  private registerBuiltinAgents() {\n    try {\n      // Register core agents\n      this.registerAgent(new DevToolsAgent(this.context));\n      this.registerAgent(new RunAgent());\n\n      // Conditionally register other agents if available\n      try {\n        const { ErrorFixAgent } = require('./ErrorFixAgent');\n        const { FileManagementAgent } = require('./FileManagementAgent');\n        \n        this.registerAgent(new ErrorFixAgent());\n        this.registerAgent(new FileManagementAgent());\n      } catch (error) {\n        console.log('Optional agents not available:', error);\n      }\n    } catch (error) {\n      console.error('Error registering built-in agents:', error);\n    }\n  }\n\n  public static getInstance(context: vscode.ExtensionContext): AgentRegistry {\n    if (!AgentRegistry.instance) {\n      AgentRegistry.instance = new AgentRegistry(context);\n    }\n    return AgentRegistry.instance;\n  }\n\n  public registerAgent(agent: BaseAgent): void {\n    if (this.agents.has(agent.id)) {\n      throw new Error(`Agent with ID ${agent.id} is already registered`);\n    }\n    this.agents.set(agent.id, agent);\n  }\n\n  public getAgent(id: string): BaseAgent | undefined {\n    return this.agents.get(id);\n  }\n\n  public getAllAgents(): BaseAgent[] {\n    return Array.from(this.agents.values());\n  }\n\n  public findAgentForInput(input: string): BaseAgent | undefined {\n    return Array.from(this.agents.values()).find(agent => agent.canHandle(input));\n  }\n}","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Diff\", {\n  enumerable: true,\n  get: function get() {\n    return _base[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"diffChars\", {\n  enumerable: true,\n  get: function get() {\n    return _character.diffChars;\n  }\n});\nObject.defineProperty(exports, \"diffWords\", {\n  enumerable: true,\n  get: function get() {\n    return _word.diffWords;\n  }\n});\nObject.defineProperty(exports, \"diffWordsWithSpace\", {\n  enumerable: true,\n  get: function get() {\n    return _word.diffWordsWithSpace;\n  }\n});\nObject.defineProperty(exports, \"diffLines\", {\n  enumerable: true,\n  get: function get() {\n    return _line.diffLines;\n  }\n});\nObject.defineProperty(exports, \"diffTrimmedLines\", {\n  enumerable: true,\n  get: function get() {\n    return _line.diffTrimmedLines;\n  }\n});\nObject.defineProperty(exports, \"diffSentences\", {\n  enumerable: true,\n  get: function get() {\n    return _sentence.diffSentences;\n  }\n});\nObject.defineProperty(exports, \"diffCss\", {\n  enumerable: true,\n  get: function get() {\n    return _css.diffCss;\n  }\n});\nObject.defineProperty(exports, \"diffJson\", {\n  enumerable: true,\n  get: function get() {\n    return _json.diffJson;\n  }\n});\nObject.defineProperty(exports, \"canonicalize\", {\n  enumerable: true,\n  get: function get() {\n    return _json.canonicalize;\n  }\n});\nObject.defineProperty(exports, \"diffArrays\", {\n  enumerable: true,\n  get: function get() {\n    return _array.diffArrays;\n  }\n});\nObject.defineProperty(exports, \"applyPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _apply.applyPatch;\n  }\n});\nObject.defineProperty(exports, \"applyPatches\", {\n  enumerable: true,\n  get: function get() {\n    return _apply.applyPatches;\n  }\n});\nObject.defineProperty(exports, \"parsePatch\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.parsePatch;\n  }\n});\nObject.defineProperty(exports, \"merge\", {\n  enumerable: true,\n  get: function get() {\n    return _merge.merge;\n  }\n});\nObject.defineProperty(exports, \"reversePatch\", {\n  enumerable: true,\n  get: function get() {\n    return _reverse.reversePatch;\n  }\n});\nObject.defineProperty(exports, \"structuredPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.structuredPatch;\n  }\n});\nObject.defineProperty(exports, \"createTwoFilesPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.createTwoFilesPatch;\n  }\n});\nObject.defineProperty(exports, \"createPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.createPatch;\n  }\n});\nObject.defineProperty(exports, \"formatPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.formatPatch;\n  }\n});\nObject.defineProperty(exports, \"convertChangesToDMP\", {\n  enumerable: true,\n  get: function get() {\n    return _dmp.convertChangesToDMP;\n  }\n});\nObject.defineProperty(exports, \"convertChangesToXML\", {\n  enumerable: true,\n  get: function get() {\n    return _xml.convertChangesToXML;\n  }\n});\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./diff/base\"))\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_character = require(\"./diff/character\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_word = require(\"./diff/word\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_line = require(\"./diff/line\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_sentence = require(\"./diff/sentence\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_css = require(\"./diff/css\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_json = require(\"./diff/json\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_array = require(\"./diff/array\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_apply = require(\"./patch/apply\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_parse = require(\"./patch/parse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_merge = require(\"./patch/merge\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_reverse = require(\"./patch/reverse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_create = require(\"./patch/create\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_dmp = require(\"./convert/dmp\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_xml = require(\"./convert/xml\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIFNlZSBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zIG9mIHVzZSAqL1xuXG4vKlxuICogVGV4dCBkaWZmIGltcGxlbWVudGF0aW9uLlxuICpcbiAqIFRoaXMgbGlicmFyeSBzdXBwb3J0cyB0aGUgZm9sbG93aW5nIEFQSXM6XG4gKiBEaWZmLmRpZmZDaGFyczogQ2hhcmFjdGVyIGJ5IGNoYXJhY3RlciBkaWZmXG4gKiBEaWZmLmRpZmZXb3JkczogV29yZCAoYXMgZGVmaW5lZCBieSBcXGIgcmVnZXgpIGRpZmYgd2hpY2ggaWdub3JlcyB3aGl0ZXNwYWNlXG4gKiBEaWZmLmRpZmZMaW5lczogTGluZSBiYXNlZCBkaWZmXG4gKlxuICogRGlmZi5kaWZmQ3NzOiBEaWZmIHRhcmdldGVkIGF0IENTUyBjb250ZW50XG4gKlxuICogVGhlc2UgbWV0aG9kcyBhcmUgYmFzZWQgb24gdGhlIGltcGxlbWVudGF0aW9uIHByb3Bvc2VkIGluXG4gKiBcIkFuIE8oTkQpIERpZmZlcmVuY2UgQWxnb3JpdGhtIGFuZCBpdHMgVmFyaWF0aW9uc1wiIChNeWVycywgMTk4NikuXG4gKiBodHRwOi8vY2l0ZXNlZXJ4LmlzdC5wc3UuZWR1L3ZpZXdkb2Mvc3VtbWFyeT9kb2k9MTAuMS4xLjQuNjkyN1xuICovXG5pbXBvcnQgRGlmZiBmcm9tICcuL2RpZmYvYmFzZSc7XG5pbXBvcnQge2RpZmZDaGFyc30gZnJvbSAnLi9kaWZmL2NoYXJhY3Rlcic7XG5pbXBvcnQge2RpZmZXb3JkcywgZGlmZldvcmRzV2l0aFNwYWNlfSBmcm9tICcuL2RpZmYvd29yZCc7XG5pbXBvcnQge2RpZmZMaW5lcywgZGlmZlRyaW1tZWRMaW5lc30gZnJvbSAnLi9kaWZmL2xpbmUnO1xuaW1wb3J0IHtkaWZmU2VudGVuY2VzfSBmcm9tICcuL2RpZmYvc2VudGVuY2UnO1xuXG5pbXBvcnQge2RpZmZDc3N9IGZyb20gJy4vZGlmZi9jc3MnO1xuaW1wb3J0IHtkaWZmSnNvbiwgY2Fub25pY2FsaXplfSBmcm9tICcuL2RpZmYvanNvbic7XG5cbmltcG9ydCB7ZGlmZkFycmF5c30gZnJvbSAnLi9kaWZmL2FycmF5JztcblxuaW1wb3J0IHthcHBseVBhdGNoLCBhcHBseVBhdGNoZXN9IGZyb20gJy4vcGF0Y2gvYXBwbHknO1xuaW1wb3J0IHtwYXJzZVBhdGNofSBmcm9tICcuL3BhdGNoL3BhcnNlJztcbmltcG9ydCB7bWVyZ2V9IGZyb20gJy4vcGF0Y2gvbWVyZ2UnO1xuaW1wb3J0IHtyZXZlcnNlUGF0Y2h9IGZyb20gJy4vcGF0Y2gvcmV2ZXJzZSc7XG5pbXBvcnQge3N0cnVjdHVyZWRQYXRjaCwgY3JlYXRlVHdvRmlsZXNQYXRjaCwgY3JlYXRlUGF0Y2gsIGZvcm1hdFBhdGNofSBmcm9tICcuL3BhdGNoL2NyZWF0ZSc7XG5cbmltcG9ydCB7Y29udmVydENoYW5nZXNUb0RNUH0gZnJvbSAnLi9jb252ZXJ0L2RtcCc7XG5pbXBvcnQge2NvbnZlcnRDaGFuZ2VzVG9YTUx9IGZyb20gJy4vY29udmVydC94bWwnO1xuXG5leHBvcnQge1xuICBEaWZmLFxuXG4gIGRpZmZDaGFycyxcbiAgZGlmZldvcmRzLFxuICBkaWZmV29yZHNXaXRoU3BhY2UsXG4gIGRpZmZMaW5lcyxcbiAgZGlmZlRyaW1tZWRMaW5lcyxcbiAgZGlmZlNlbnRlbmNlcyxcblxuICBkaWZmQ3NzLFxuICBkaWZmSnNvbixcblxuICBkaWZmQXJyYXlzLFxuXG4gIHN0cnVjdHVyZWRQYXRjaCxcbiAgY3JlYXRlVHdvRmlsZXNQYXRjaCxcbiAgY3JlYXRlUGF0Y2gsXG4gIGZvcm1hdFBhdGNoLFxuICBhcHBseVBhdGNoLFxuICBhcHBseVBhdGNoZXMsXG4gIHBhcnNlUGF0Y2gsXG4gIG1lcmdlLFxuICByZXZlcnNlUGF0Y2gsXG4gIGNvbnZlcnRDaGFuZ2VzVG9ETVAsXG4gIGNvbnZlcnRDaGFuZ2VzVG9YTUwsXG4gIGNhbm9uaWNhbGl6ZVxufTtcbiJdfQ==\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcLineCount = calcLineCount;\nexports.merge = merge;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_create = require(\"./create\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_parse = require(\"./parse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_array = require(\"../util/array\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*istanbul ignore end*/\nfunction calcLineCount(hunk) {\n  /*istanbul ignore start*/\n  var _calcOldNewLineCount =\n  /*istanbul ignore end*/\n  calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _parse\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        parsePatch)\n        /*istanbul ignore end*/\n        (param)[0]\n      );\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      structuredPatch)\n      /*istanbul ignore end*/\n      (undefined, undefined, base, param)\n    );\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      /*istanbul ignore start*/\n      var _hunk$lines;\n\n      /*istanbul ignore end*/\n      // Mine inserted\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_hunk$lines =\n      /*istanbul ignore end*/\n      hunk.lines).push.apply(\n      /*istanbul ignore start*/\n      _hunk$lines\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      /*istanbul ignore start*/\n      var _hunk$lines2;\n\n      /*istanbul ignore end*/\n      // Theirs inserted\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_hunk$lines2 =\n      /*istanbul ignore end*/\n      hunk.lines).push.apply(\n      /*istanbul ignore start*/\n      _hunk$lines2\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _array\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    arrayStartsWith)\n    /*istanbul ignore end*/\n    (myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      /*istanbul ignore start*/\n      var _hunk$lines3;\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_hunk$lines3 =\n      /*istanbul ignore end*/\n      hunk.lines).push.apply(\n      /*istanbul ignore start*/\n      _hunk$lines3\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      myChanges));\n\n      return;\n    } else if (\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _array\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    arrayStartsWith)\n    /*istanbul ignore end*/\n    (theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      /*istanbul ignore start*/\n      var _hunk$lines4;\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_hunk$lines4 =\n      /*istanbul ignore end*/\n      hunk.lines).push.apply(\n      /*istanbul ignore start*/\n      _hunk$lines4\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      theirChanges));\n\n      return;\n    }\n  } else if (\n  /*istanbul ignore start*/\n  (0,\n  /*istanbul ignore end*/\n\n  /*istanbul ignore start*/\n  _array\n  /*istanbul ignore end*/\n  .\n  /*istanbul ignore start*/\n  arrayEqual)\n  /*istanbul ignore end*/\n  (myChanges, theirChanges)) {\n    /*istanbul ignore start*/\n    var _hunk$lines5;\n\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    (_hunk$lines5 =\n    /*istanbul ignore end*/\n    hunk.lines).push.apply(\n    /*istanbul ignore start*/\n    _hunk$lines5\n    /*istanbul ignore end*/\n    ,\n    /*istanbul ignore start*/\n    _toConsumableArray(\n    /*istanbul ignore end*/\n    myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    /*istanbul ignore start*/\n    var _hunk$lines6;\n\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    (_hunk$lines6 =\n    /*istanbul ignore end*/\n    hunk.lines).push.apply(\n    /*istanbul ignore start*/\n    _hunk$lines6\n    /*istanbul ignore end*/\n    ,\n    /*istanbul ignore start*/\n    _toConsumableArray(\n    /*istanbul ignore end*/\n    theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertChangesToDMP = convertChangesToDMP;\n\n/*istanbul ignore end*/\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb252ZXJ0L2RtcC5qcyJdLCJuYW1lcyI6WyJjb252ZXJ0Q2hhbmdlc1RvRE1QIiwiY2hhbmdlcyIsInJldCIsImNoYW5nZSIsIm9wZXJhdGlvbiIsImkiLCJsZW5ndGgiLCJhZGRlZCIsInJlbW92ZWQiLCJwdXNoIiwidmFsdWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ08sU0FBU0EsbUJBQVQsQ0FBNkJDLE9BQTdCLEVBQXNDO0FBQzNDLE1BQUlDLEdBQUcsR0FBRyxFQUFWO0FBQUEsTUFDSUMsTUFESjtBQUFBLE1BRUlDLFNBRko7O0FBR0EsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSixPQUFPLENBQUNLLE1BQTVCLEVBQW9DRCxDQUFDLEVBQXJDLEVBQXlDO0FBQ3ZDRixJQUFBQSxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0ksQ0FBRCxDQUFoQjs7QUFDQSxRQUFJRixNQUFNLENBQUNJLEtBQVgsRUFBa0I7QUFDaEJILE1BQUFBLFNBQVMsR0FBRyxDQUFaO0FBQ0QsS0FGRCxNQUVPLElBQUlELE1BQU0sQ0FBQ0ssT0FBWCxFQUFvQjtBQUN6QkosTUFBQUEsU0FBUyxHQUFHLENBQUMsQ0FBYjtBQUNELEtBRk0sTUFFQTtBQUNMQSxNQUFBQSxTQUFTLEdBQUcsQ0FBWjtBQUNEOztBQUVERixJQUFBQSxHQUFHLENBQUNPLElBQUosQ0FBUyxDQUFDTCxTQUFELEVBQVlELE1BQU0sQ0FBQ08sS0FBbkIsQ0FBVDtBQUNEOztBQUNELFNBQU9SLEdBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNlZTogaHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL2dvb2dsZS1kaWZmLW1hdGNoLXBhdGNoL3dpa2kvQVBJXG5leHBvcnQgZnVuY3Rpb24gY29udmVydENoYW5nZXNUb0RNUChjaGFuZ2VzKSB7XG4gIGxldCByZXQgPSBbXSxcbiAgICAgIGNoYW5nZSxcbiAgICAgIG9wZXJhdGlvbjtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGFuZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgY2hhbmdlID0gY2hhbmdlc1tpXTtcbiAgICBpZiAoY2hhbmdlLmFkZGVkKSB7XG4gICAgICBvcGVyYXRpb24gPSAxO1xuICAgIH0gZWxzZSBpZiAoY2hhbmdlLnJlbW92ZWQpIHtcbiAgICAgIG9wZXJhdGlvbiA9IC0xO1xuICAgIH0gZWxzZSB7XG4gICAgICBvcGVyYXRpb24gPSAwO1xuICAgIH1cblxuICAgIHJldC5wdXNoKFtvcGVyYXRpb24sIGNoYW5nZS52YWx1ZV0pO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG4iXX0=\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertChangesToXML = convertChangesToXML;\n\n/*istanbul ignore end*/\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb252ZXJ0L3htbC5qcyJdLCJuYW1lcyI6WyJjb252ZXJ0Q2hhbmdlc1RvWE1MIiwiY2hhbmdlcyIsInJldCIsImkiLCJsZW5ndGgiLCJjaGFuZ2UiLCJhZGRlZCIsInB1c2giLCJyZW1vdmVkIiwiZXNjYXBlSFRNTCIsInZhbHVlIiwiam9pbiIsInMiLCJuIiwicmVwbGFjZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU8sU0FBU0EsbUJBQVQsQ0FBNkJDLE9BQTdCLEVBQXNDO0FBQzNDLE1BQUlDLEdBQUcsR0FBRyxFQUFWOztBQUNBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsT0FBTyxDQUFDRyxNQUE1QixFQUFvQ0QsQ0FBQyxFQUFyQyxFQUF5QztBQUN2QyxRQUFJRSxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0UsQ0FBRCxDQUFwQjs7QUFDQSxRQUFJRSxNQUFNLENBQUNDLEtBQVgsRUFBa0I7QUFDaEJKLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLE9BQVQ7QUFDRCxLQUZELE1BRU8sSUFBSUYsTUFBTSxDQUFDRyxPQUFYLEVBQW9CO0FBQ3pCTixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxPQUFUO0FBQ0Q7O0FBRURMLElBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRSxVQUFVLENBQUNKLE1BQU0sQ0FBQ0ssS0FBUixDQUFuQjs7QUFFQSxRQUFJTCxNQUFNLENBQUNDLEtBQVgsRUFBa0I7QUFDaEJKLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFFBQVQ7QUFDRCxLQUZELE1BRU8sSUFBSUYsTUFBTSxDQUFDRyxPQUFYLEVBQW9CO0FBQ3pCTixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxRQUFUO0FBQ0Q7QUFDRjs7QUFDRCxTQUFPTCxHQUFHLENBQUNTLElBQUosQ0FBUyxFQUFULENBQVA7QUFDRDs7QUFFRCxTQUFTRixVQUFULENBQW9CRyxDQUFwQixFQUF1QjtBQUNyQixNQUFJQyxDQUFDLEdBQUdELENBQVI7QUFDQUMsRUFBQUEsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLE9BQWhCLENBQUo7QUFDQUQsRUFBQUEsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLE1BQWhCLENBQUo7QUFDQUQsRUFBQUEsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLE1BQWhCLENBQUo7QUFDQUQsRUFBQUEsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLFFBQWhCLENBQUo7QUFFQSxTQUFPRCxDQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY29udmVydENoYW5nZXNUb1hNTChjaGFuZ2VzKSB7XG4gIGxldCByZXQgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGFuZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IGNoYW5nZSA9IGNoYW5nZXNbaV07XG4gICAgaWYgKGNoYW5nZS5hZGRlZCkge1xuICAgICAgcmV0LnB1c2goJzxpbnM+Jyk7XG4gICAgfSBlbHNlIGlmIChjaGFuZ2UucmVtb3ZlZCkge1xuICAgICAgcmV0LnB1c2goJzxkZWw+Jyk7XG4gICAgfVxuXG4gICAgcmV0LnB1c2goZXNjYXBlSFRNTChjaGFuZ2UudmFsdWUpKTtcblxuICAgIGlmIChjaGFuZ2UuYWRkZWQpIHtcbiAgICAgIHJldC5wdXNoKCc8L2lucz4nKTtcbiAgICB9IGVsc2UgaWYgKGNoYW5nZS5yZW1vdmVkKSB7XG4gICAgICByZXQucHVzaCgnPC9kZWw+Jyk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXQuam9pbignJyk7XG59XG5cbmZ1bmN0aW9uIGVzY2FwZUhUTUwocykge1xuICBsZXQgbiA9IHM7XG4gIG4gPSBuLnJlcGxhY2UoLyYvZywgJyZhbXA7Jyk7XG4gIG4gPSBuLnJlcGxhY2UoLzwvZywgJyZsdDsnKTtcbiAgbiA9IG4ucmVwbGFjZSgvPi9nLCAnJmd0OycpO1xuICBuID0gbi5yZXBsYWNlKC9cIi9nLCAnJnF1b3Q7Jyk7XG5cbiAgcmV0dXJuIG47XG59XG4iXX0=\n","import { BaseAgent, AgentContext, AgentResponse } from './BaseAgent';\nimport * as vscode from 'vscode';\nimport * as path from 'path';\n\nexport class FileManagementAgent implements BaseAgent {\n  id = 'file-management-agent';\n  name = 'File Management Agent';\n  description = 'Creates and deletes files and folders';\n  commandPrefix = '@';\n\n  canHandle(input: string): boolean {\n    return ['@createfile', '@createfolder', '@deletefile', '@deletefolder'].some(cmd => \n      input.toLowerCase().startsWith(cmd)\n    );\n  }\n\n  async execute(context: AgentContext): Promise<AgentResponse> {\n    try {\n      const { prompt } = context;\n      if (!prompt) {\n        return { success: false, message: 'No command provided' };\n      }\n\n      // Get workspace root\n      const workspaceRoot = vscode.workspace.workspaceFolders?.[0];\n      if (!workspaceRoot) {\n        return { success: false, message: 'No workspace folder found' };\n      }\n\n      // Improved command parsing\n      const commandPattern = /^@(createfile|createfolder|deletefile|deletefolder)\\s+(.+)$/i;\n      const match = prompt.match(commandPattern);\n\n      if (!match) {\n        return { success: false, message: 'Invalid command format. Use @createfile <filename> or @createfolder <foldername>' };\n      }\n\n      const [, command, name] = match;\n\n      if (!name || name.trim().length === 0) {\n        return { success: false, message: 'No name provided' };\n      }\n\n      // Create full path URI using workspace root\n      const targetUri = vscode.Uri.joinPath(workspaceRoot.uri, name.trim());\n\n      try {\n        switch (command.toLowerCase()) {\n          case 'createfile':\n            await vscode.workspace.fs.writeFile(targetUri, new Uint8Array());\n            return { \n              success: true, \n              message: `File created: ${name} in ${workspaceRoot.name}` \n            };\n\n          case 'createfolder':\n            await vscode.workspace.fs.createDirectory(targetUri);\n            return { \n              success: true, \n              message: `Folder created: ${name} in ${workspaceRoot.name}` \n            };\n\n          case 'deletefile':\n            await vscode.workspace.fs.delete(targetUri, { useTrash: true });\n            return { \n              success: true, \n              message: `File deleted: ${name} from ${workspaceRoot.name}` \n            };\n\n          case 'deletefolder':\n            await vscode.workspace.fs.delete(targetUri, { \n              recursive: true, \n              useTrash: true \n            });\n            return { \n              success: true, \n              message: `Folder deleted: ${name} from ${workspaceRoot.name}` \n            };\n\n          default:\n            return { success: false, message: 'Invalid command' };\n        }\n      } catch (error) {\n        return {\n          success: false,\n          message: `Operation failed: ${error instanceof Error ? error.message : String(error)}`\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: `Error: ${error instanceof Error ? error.message : String(error)}`\n      };\n    }\n  }\n\n  async validate(context: AgentContext): Promise<boolean> {\n    if (!context.prompt) {\n      return false;\n    }\n    return this.canHandle(context.prompt);\n  }\n}\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffChars = diffChars;\nexports.characterDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar characterDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.characterDiff = characterDiff;\n\n/*istanbul ignore end*/\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2NoYXJhY3Rlci5qcyJdLCJuYW1lcyI6WyJjaGFyYWN0ZXJEaWZmIiwiRGlmZiIsImRpZmZDaGFycyIsIm9sZFN0ciIsIm5ld1N0ciIsIm9wdGlvbnMiLCJkaWZmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFFTyxJQUFNQSxhQUFhLEdBQUc7QUFBSUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUEsQ0FBSixFQUF0Qjs7Ozs7O0FBQ0EsU0FBU0MsU0FBVCxDQUFtQkMsTUFBbkIsRUFBMkJDLE1BQTNCLEVBQW1DQyxPQUFuQyxFQUE0QztBQUFFLFNBQU9MLGFBQWEsQ0FBQ00sSUFBZCxDQUFtQkgsTUFBbkIsRUFBMkJDLE1BQTNCLEVBQW1DQyxPQUFuQyxDQUFQO0FBQXFEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGNvbnN0IGNoYXJhY3RlckRpZmYgPSBuZXcgRGlmZigpO1xuZXhwb3J0IGZ1bmN0aW9uIGRpZmZDaGFycyhvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucykgeyByZXR1cm4gY2hhcmFjdGVyRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBvcHRpb25zKTsgfVxuIl19\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.structuredPatch = structuredPatch;\nexports.formatPatch = formatPatch;\nexports.createTwoFilesPatch = createTwoFilesPatch;\nexports.createPatch = createPatch;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_line = require(\"../diff/line\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*istanbul ignore end*/\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff =\n  /*istanbul ignore start*/\n  (0,\n  /*istanbul ignore end*/\n\n  /*istanbul ignore start*/\n  _line\n  /*istanbul ignore end*/\n  .\n  /*istanbul ignore start*/\n  diffLines)\n  /*istanbul ignore end*/\n  (oldStr, newStr, options);\n\n  if (!diff) {\n    return;\n  }\n\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  /*istanbul ignore start*/\n  var _loop = function _loop(\n  /*istanbul ignore end*/\n  i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      /*istanbul ignore start*/\n      var _curRange;\n\n      /*istanbul ignore end*/\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_curRange =\n      /*istanbul ignore end*/\n      curRange).push.apply(\n      /*istanbul ignore start*/\n      _curRange\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          /*istanbul ignore start*/\n          var _curRange2;\n\n          /*istanbul ignore end*/\n          // Overlapping\n\n          /*istanbul ignore start*/\n\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          (_curRange2 =\n          /*istanbul ignore end*/\n          curRange).push.apply(\n          /*istanbul ignore start*/\n          _curRange2\n          /*istanbul ignore end*/\n          ,\n          /*istanbul ignore start*/\n          _toConsumableArray(\n          /*istanbul ignore end*/\n          contextLines(lines)));\n        } else {\n          /*istanbul ignore start*/\n          var _curRange3;\n\n          /*istanbul ignore end*/\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          /*istanbul ignore start*/\n\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          (_curRange3 =\n          /*istanbul ignore end*/\n          curRange).push.apply(\n          /*istanbul ignore start*/\n          _curRange3\n          /*istanbul ignore end*/\n          ,\n          /*istanbul ignore start*/\n          _toConsumableArray(\n          /*istanbul ignore end*/\n          contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    /*istanbul ignore start*/\n    _loop(\n    /*istanbul ignore end*/\n    i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nfunction formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  var ret = [];\n\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffJson = diffJson;\nexports.canonicalize = canonicalize;\nexports.jsonDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_line = require(\"./line\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*istanbul ignore end*/\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n](); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n/*istanbul ignore start*/\nexports.jsonDiff = jsonDiff;\n\n/*istanbul ignore end*/\njsonDiff.useLongestToken = true;\njsonDiff.tokenize =\n/*istanbul ignore start*/\n_line\n/*istanbul ignore end*/\n.\n/*istanbul ignore start*/\nlineDiff\n/*istanbul ignore end*/\n.tokenize;\n\njsonDiff.castInput = function (value) {\n  /*istanbul ignore start*/\n  var _this$options =\n  /*istanbul ignore end*/\n  this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v)\n  /*istanbul ignore start*/\n  {\n    return (\n      /*istanbul ignore end*/\n      typeof v === 'undefined' ? undefinedReplacement : v\n    );\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return (\n    /*istanbul ignore start*/\n    _base\n    /*istanbul ignore end*/\n    [\n    /*istanbul ignore start*/\n    \"default\"\n    /*istanbul ignore end*/\n    ].prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'))\n  );\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (\n  /*istanbul ignore start*/\n  _typeof(\n  /*istanbul ignore end*/\n  obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrayEqual = arrayEqual;\nexports.arrayStartsWith = arrayStartsWith;\n\n/*istanbul ignore end*/\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2FycmF5LmpzIl0sIm5hbWVzIjpbImFycmF5RXF1YWwiLCJhIiwiYiIsImxlbmd0aCIsImFycmF5U3RhcnRzV2l0aCIsImFycmF5Iiwic3RhcnQiLCJpIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQU8sU0FBU0EsVUFBVCxDQUFvQkMsQ0FBcEIsRUFBdUJDLENBQXZCLEVBQTBCO0FBQy9CLE1BQUlELENBQUMsQ0FBQ0UsTUFBRixLQUFhRCxDQUFDLENBQUNDLE1BQW5CLEVBQTJCO0FBQ3pCLFdBQU8sS0FBUDtBQUNEOztBQUVELFNBQU9DLGVBQWUsQ0FBQ0gsQ0FBRCxFQUFJQyxDQUFKLENBQXRCO0FBQ0Q7O0FBRU0sU0FBU0UsZUFBVCxDQUF5QkMsS0FBekIsRUFBZ0NDLEtBQWhDLEVBQXVDO0FBQzVDLE1BQUlBLEtBQUssQ0FBQ0gsTUFBTixHQUFlRSxLQUFLLENBQUNGLE1BQXpCLEVBQWlDO0FBQy9CLFdBQU8sS0FBUDtBQUNEOztBQUVELE9BQUssSUFBSUksQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0QsS0FBSyxDQUFDSCxNQUExQixFQUFrQ0ksQ0FBQyxFQUFuQyxFQUF1QztBQUNyQyxRQUFJRCxLQUFLLENBQUNDLENBQUQsQ0FBTCxLQUFhRixLQUFLLENBQUNFLENBQUQsQ0FBdEIsRUFBMkI7QUFDekIsYUFBTyxLQUFQO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPLElBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBhcnJheUVxdWFsKGEsIGIpIHtcbiAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBhcnJheVN0YXJ0c1dpdGgoYSwgYik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcnJheVN0YXJ0c1dpdGgoYXJyYXksIHN0YXJ0KSB7XG4gIGlmIChzdGFydC5sZW5ndGggPiBhcnJheS5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0YXJ0Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0YXJ0W2ldICE9PSBhcnJheVtpXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuIl19\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reversePatch = reversePatch;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*istanbul ignore end*/\nfunction reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return (\n    /*istanbul ignore start*/\n    _objectSpread(_objectSpread({},\n    /*istanbul ignore end*/\n    structuredPatch), {}, {\n      oldFileName: structuredPatch.newFileName,\n      oldHeader: structuredPatch.newHeader,\n      newFileName: structuredPatch.oldFileName,\n      newHeader: structuredPatch.oldHeader,\n      hunks: structuredPatch.hunks.map(function (hunk) {\n        return {\n          oldLines: hunk.newLines,\n          oldStart: hunk.newStart,\n          newLines: hunk.oldLines,\n          newStart: hunk.oldStart,\n          linedelimiters: hunk.linedelimiters,\n          lines: hunk.lines.map(function (l) {\n            if (l.startsWith('-')) {\n              return (\n                /*istanbul ignore start*/\n                \"+\".concat(\n                /*istanbul ignore end*/\n                l.slice(1))\n              );\n            }\n\n            if (l.startsWith('+')) {\n              return (\n                /*istanbul ignore start*/\n                \"-\".concat(\n                /*istanbul ignore end*/\n                l.slice(1))\n              );\n            }\n\n            return l;\n          })\n        };\n      })\n    })\n  );\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXRjaC9yZXZlcnNlLmpzIl0sIm5hbWVzIjpbInJldmVyc2VQYXRjaCIsInN0cnVjdHVyZWRQYXRjaCIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsInJldmVyc2UiLCJvbGRGaWxlTmFtZSIsIm5ld0ZpbGVOYW1lIiwib2xkSGVhZGVyIiwibmV3SGVhZGVyIiwiaHVua3MiLCJodW5rIiwib2xkTGluZXMiLCJuZXdMaW5lcyIsIm9sZFN0YXJ0IiwibmV3U3RhcnQiLCJsaW5lZGVsaW1pdGVycyIsImxpbmVzIiwibCIsInN0YXJ0c1dpdGgiLCJzbGljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQU8sU0FBU0EsWUFBVCxDQUFzQkMsZUFBdEIsRUFBdUM7QUFDNUMsTUFBSUMsS0FBSyxDQUFDQyxPQUFOLENBQWNGLGVBQWQsQ0FBSixFQUFvQztBQUNsQyxXQUFPQSxlQUFlLENBQUNHLEdBQWhCLENBQW9CSixZQUFwQixFQUFrQ0ssT0FBbEMsRUFBUDtBQUNEOztBQUVEO0FBQUE7QUFBQTtBQUFBO0FBQ0tKLElBQUFBLGVBREw7QUFFRUssTUFBQUEsV0FBVyxFQUFFTCxlQUFlLENBQUNNLFdBRi9CO0FBR0VDLE1BQUFBLFNBQVMsRUFBRVAsZUFBZSxDQUFDUSxTQUg3QjtBQUlFRixNQUFBQSxXQUFXLEVBQUVOLGVBQWUsQ0FBQ0ssV0FKL0I7QUFLRUcsTUFBQUEsU0FBUyxFQUFFUixlQUFlLENBQUNPLFNBTDdCO0FBTUVFLE1BQUFBLEtBQUssRUFBRVQsZUFBZSxDQUFDUyxLQUFoQixDQUFzQk4sR0FBdEIsQ0FBMEIsVUFBQU8sSUFBSSxFQUFJO0FBQ3ZDLGVBQU87QUFDTEMsVUFBQUEsUUFBUSxFQUFFRCxJQUFJLENBQUNFLFFBRFY7QUFFTEMsVUFBQUEsUUFBUSxFQUFFSCxJQUFJLENBQUNJLFFBRlY7QUFHTEYsVUFBQUEsUUFBUSxFQUFFRixJQUFJLENBQUNDLFFBSFY7QUFJTEcsVUFBQUEsUUFBUSxFQUFFSixJQUFJLENBQUNHLFFBSlY7QUFLTEUsVUFBQUEsY0FBYyxFQUFFTCxJQUFJLENBQUNLLGNBTGhCO0FBTUxDLFVBQUFBLEtBQUssRUFBRU4sSUFBSSxDQUFDTSxLQUFMLENBQVdiLEdBQVgsQ0FBZSxVQUFBYyxDQUFDLEVBQUk7QUFDekIsZ0JBQUlBLENBQUMsQ0FBQ0MsVUFBRixDQUFhLEdBQWIsQ0FBSixFQUF1QjtBQUFFO0FBQUE7QUFBQTtBQUFBO0FBQVdELGdCQUFBQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxDQUFSLENBQVg7QUFBQTtBQUEwQjs7QUFDbkQsZ0JBQUlGLENBQUMsQ0FBQ0MsVUFBRixDQUFhLEdBQWIsQ0FBSixFQUF1QjtBQUFFO0FBQUE7QUFBQTtBQUFBO0FBQVdELGdCQUFBQSxDQUFDLENBQUNFLEtBQUYsQ0FBUSxDQUFSLENBQVg7QUFBQTtBQUEwQjs7QUFDbkQsbUJBQU9GLENBQVA7QUFDRCxXQUpNO0FBTkYsU0FBUDtBQVlELE9BYk07QUFOVDtBQUFBO0FBcUJEIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHJldmVyc2VQYXRjaChzdHJ1Y3R1cmVkUGF0Y2gpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoc3RydWN0dXJlZFBhdGNoKSkge1xuICAgIHJldHVybiBzdHJ1Y3R1cmVkUGF0Y2gubWFwKHJldmVyc2VQYXRjaCkucmV2ZXJzZSgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5zdHJ1Y3R1cmVkUGF0Y2gsXG4gICAgb2xkRmlsZU5hbWU6IHN0cnVjdHVyZWRQYXRjaC5uZXdGaWxlTmFtZSxcbiAgICBvbGRIZWFkZXI6IHN0cnVjdHVyZWRQYXRjaC5uZXdIZWFkZXIsXG4gICAgbmV3RmlsZU5hbWU6IHN0cnVjdHVyZWRQYXRjaC5vbGRGaWxlTmFtZSxcbiAgICBuZXdIZWFkZXI6IHN0cnVjdHVyZWRQYXRjaC5vbGRIZWFkZXIsXG4gICAgaHVua3M6IHN0cnVjdHVyZWRQYXRjaC5odW5rcy5tYXAoaHVuayA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBvbGRMaW5lczogaHVuay5uZXdMaW5lcyxcbiAgICAgICAgb2xkU3RhcnQ6IGh1bmsubmV3U3RhcnQsXG4gICAgICAgIG5ld0xpbmVzOiBodW5rLm9sZExpbmVzLFxuICAgICAgICBuZXdTdGFydDogaHVuay5vbGRTdGFydCxcbiAgICAgICAgbGluZWRlbGltaXRlcnM6IGh1bmsubGluZWRlbGltaXRlcnMsXG4gICAgICAgIGxpbmVzOiBodW5rLmxpbmVzLm1hcChsID0+IHtcbiAgICAgICAgICBpZiAobC5zdGFydHNXaXRoKCctJykpIHsgcmV0dXJuIGArJHtsLnNsaWNlKDEpfWA7IH1cbiAgICAgICAgICBpZiAobC5zdGFydHNXaXRoKCcrJykpIHsgcmV0dXJuIGAtJHtsLnNsaWNlKDEpfWA7IH1cbiAgICAgICAgICByZXR1cm4gbDtcbiAgICAgICAgfSlcbiAgICAgIH07XG4gICAgfSlcbiAgfTtcbn1cbiJdfQ==\n","import * as vscode from 'vscode';\nimport * as diff from 'diff';\nimport { createPatch } from 'diff';\n\ninterface PendingChange {\n  uri: vscode.Uri;\n  originalContent: string;\n  newContent: string;\n  diffHtml: string;\n}\n\nexport class DiffService {\n  private pendingChanges: Map<string, PendingChange> = new Map();\n  private changes: Map<string, string> = new Map();\n  private diffPanel: vscode.WebviewPanel | null = null;\n\n  /**\n   * Create a diff between original and new content\n   * @param filePath Path to the file\n   * @param originalContent Original file content\n   * @param newContent New file content\n   * @returns HTML representation of the diff\n   */\n  public createDiff(filePath: string, originalContent: string, newContent: string): string {\n    // Strip extension when storing/comparing files\n    const normalizedPath = this.stripFileExtension(filePath);\n    const uri = this.getFileUri(filePath);\n    const changes = diff.diffLines(originalContent, newContent);\n    \n    // Generate HTML for the diff\n    let diffHtml = `<div class=\"diff-container\">\n      <div class=\"diff-header\">${normalizedPath}</div>\n      <div class=\"diff-content\">`;\n    \n    for (const change of changes) {\n      if (change.added) {\n        diffHtml += `<div class=\"diff-line diff-added\">+ ${this.escapeHtml(change.value)}</div>`;\n      } else if (change.removed) {\n        diffHtml += `<div class=\"diff-line diff-removed\">- ${this.escapeHtml(change.value)}</div>`;\n      } else {\n        diffHtml += `<div class=\"diff-line diff-unchanged\"> ${this.escapeHtml(change.value)}</div>`;\n      }\n    }\n    \n    diffHtml += `</div></div>`;\n    \n    // Store the pending change\n    this.pendingChanges.set(uri.toString(), {\n      uri,\n      originalContent,\n      newContent,\n      diffHtml\n    });\n    \n    return diffHtml;\n  }\n\n  /**\n   * Show diff in a webview panel\n   * @param filePath Path to the file\n   * @param originalContent Original file content\n   * @param newContent New file content\n   */\n  public showDiff(filePath: string, originalContent: string, newContent: string): void {\n    const diffHtml = this.createDiff(filePath, originalContent, newContent);\n    \n    if (!this.diffPanel) {\n      this.diffPanel = vscode.window.createWebviewPanel(\n        'momoDiff',\n        'Momo: File Changes',\n        vscode.ViewColumn.Two,\n        {\n          enableScripts: true,\n          retainContextWhenHidden: true\n        }\n      );\n      \n      this.diffPanel.onDidDispose(() => {\n        this.diffPanel = null;\n      });\n    }\n    \n    const cssStyles = `\n      <style>\n        body { font-family: var(--vscode-editor-font-family); font-size: var(--vscode-editor-font-size); }\n        .diff-container { margin-bottom: 20px; border: 1px solid var(--vscode-panel-border); }\n        .diff-header { background-color: var(--vscode-editor-background); padding: 8px; font-weight: bold; border-bottom: 1px solid var(--vscode-panel-border); }\n        .diff-content { white-space: pre; font-family: monospace; }\n        .diff-line { padding: 0 8px; }\n        .diff-added { background-color: rgba(0, 255, 0, 0.1); color: var(--vscode-gitDecoration-addedResourceForeground); }\n        .diff-removed { background-color: rgba(255, 0, 0, 0.1); color: var(--vscode-gitDecoration-deletedResourceForeground); }\n        .diff-unchanged { color: var(--vscode-editor-foreground); }\n        .actions { margin-top: 20px; display: flex; gap: 10px; }\n        button { padding: 8px 16px; cursor: pointer; background-color: var(--vscode-button-background); color: var(--vscode-button-foreground); border: none; }\n        button:hover { background-color: var(--vscode-button-hoverBackground); }\n      </style>\n    `;\n    \n    const htmlContent = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Momo: File Changes</title>\n        ${cssStyles}\n      </head>\n      <body>\n        <h2>Proposed Changes</h2>\n        ${diffHtml}\n        <div class=\"actions\">\n          <button id=\"apply\">Apply Changes</button>\n          <button id=\"reject\">Reject Changes</button>\n        </div>\n        <script>\n          const vscode = acquireVsCodeApi();\n          document.getElementById('apply').addEventListener('click', () => {\n            vscode.postMessage({ command: 'apply' });\n          });\n          document.getElementById('reject').addEventListener('click', () => {\n            vscode.postMessage({ command: 'reject' });\n          });\n        </script>\n      </body>\n      </html>\n    `;\n    \n    this.diffPanel.webview.html = htmlContent;\n    \n    this.diffPanel.webview.onDidReceiveMessage(message => {\n      switch (message.command) {\n        case 'apply':\n          vscode.commands.executeCommand('momo.applyChanges');\n          break;\n        case 'reject':\n          vscode.commands.executeCommand('momo.rejectChanges');\n          break;\n      }\n    });\n  }\n\n  /**\n   * Apply all pending changes\n   */\n  public async applyChanges(): Promise<void> {\n    // Handle both types of pending changes\n    for (const [uriString, change] of [...this.pendingChanges.entries(), ...this.changes.entries()]) {\n      try {\n        const uri = typeof change === 'string' \n          ? vscode.Uri.parse(uriString)\n          : change.uri;\n        \n        const content = typeof change === 'string'\n          ? change\n          : change.newContent;\n\n        const document = await vscode.workspace.openTextDocument(uri);\n        const edit = new vscode.WorkspaceEdit();\n        \n        const fullRange = new vscode.Range(\n          document.positionAt(0),\n          document.positionAt(document.getText().length)\n        );\n        \n        edit.replace(uri, fullRange, content);\n        await vscode.workspace.applyEdit(edit);\n        \n        const displayPath = this.stripFileExtension(uri.fsPath);\n        vscode.window.showInformationMessage(`Changes applied to ${displayPath}`);\n      } catch (error) {\n        const displayPath = this.stripFileExtension(typeof change === 'string' ? uriString : change.uri.fsPath);\n        vscode.window.showErrorMessage(`Failed to apply changes to ${displayPath}: ${error}`);\n      }\n    }\n    \n    this.clearChanges();\n  }\n\n  /**\n   * Reject all pending changes\n   */\n  public rejectChanges(): void {\n    this.clearChanges();\n    vscode.window.showInformationMessage('Changes rejected');\n  }\n\n  /**\n   * Clear all pending changes and dispose of diff panel\n   */\n  private clearChanges(): void {\n    this.pendingChanges.clear();\n    this.changes.clear();\n    \n    if (this.diffPanel) {\n      this.diffPanel.dispose();\n      this.diffPanel = null;\n    }\n  }\n\n  /**\n   * Get file URI from path\n   * @param filePath File path\n   * @returns VS Code URI\n   */\n  private getFileUri(filePath: string): vscode.Uri {\n    const workspaceFolders = vscode.workspace.workspaceFolders;\n    if (!workspaceFolders || workspaceFolders.length === 0) {\n      throw new Error('No workspace folder is open');\n    }\n    \n    return vscode.Uri.joinPath(workspaceFolders[0].uri, filePath);\n  }\n\n  /**\n   * Escape HTML special characters\n   * @param text Text to escape\n   * @returns Escaped text\n   */\n  private escapeHtml(text: string): string {\n    return text\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#039;');\n  }\n\n  /**\n   * Strip file extension from path\n   * @param filePath File path\n   * @returns Path without extension\n   */\n  private stripFileExtension(filePath: string): string {\n    const lastDotIndex = filePath.lastIndexOf('.');\n    const lastSlashIndex = Math.max(\n      filePath.lastIndexOf('/'),\n      filePath.lastIndexOf('\\\\')\n    );\n    \n    // Only strip extension if the dot comes after the last slash/backslash\n    if (lastDotIndex > lastSlashIndex && lastDotIndex !== -1) {\n      return filePath.substring(0, lastDotIndex);\n    }\n    return filePath;\n  }\n\n  async previewChanges(originalContent: string, newContent: string, uri: vscode.Uri): Promise<void> {\n    this.changes.set(uri.toString(), newContent);\n    \n    const diff = createPatch(uri.fsPath, originalContent, newContent);\n    const diffDoc = await vscode.workspace.openTextDocument({\n        content: diff,\n        language: 'diff'\n    });\n    \n    await vscode.window.showTextDocument(diffDoc, { preview: true });\n  }\n}","import { BaseAgent, AgentContext, AgentResponse } from './BaseAgent';\nimport * as vscode from 'vscode';\nimport * as path from 'path';\n\ninterface TerminalData {\n  line: string;\n  timestamp: number;\n}\n\n// Add interface for terminal output\ninterface TerminalOutputEvent {\n  data: string;\n  terminal: vscode.Terminal;\n}\n\nexport class ErrorFixAgent implements BaseAgent {\n  id = 'error-fix-agent';\n  name = 'Error Fix Agent';\n  description = 'Automatically detects and fixes errors in your code';\n  commandPrefix = '@fix';\n  \n  private terminal: vscode.Terminal | null = null;\n  private errorBuffer: string[] = [];\n  private isProcessingError = false;\n  private static INSTANCE: ErrorFixAgent;\n  private lastActiveTerminal: vscode.Terminal | null = null;\n  private monitoredTerminals: Set<string> = new Set();\n  private errorMonitorTerminal: vscode.Terminal | null = null;\n\n  constructor() {\n    // Singleton instance for terminal tracking\n    if (ErrorFixAgent.INSTANCE) {\n      return ErrorFixAgent.INSTANCE;\n    }\n    ErrorFixAgent.INSTANCE = this;\n\n    // Listen to terminal creation and closure\n    vscode.window.onDidOpenTerminal(terminal => {\n      this.setupTerminalListener(terminal);\n    });\n\n    // Track existing terminals\n    vscode.window.terminals.forEach(terminal => {\n      this.setupTerminalListener(terminal);\n    });\n\n    // Listen to diagnostics changes\n    vscode.languages.onDidChangeDiagnostics(event => {\n      this.handleDiagnosticsChange(event);\n    });\n\n    // Add terminal cleanup listener\n    vscode.window.onDidCloseTerminal(terminal => {\n      this.monitoredTerminals.delete(terminal.name);\n      if (terminal === this.errorMonitorTerminal) {\n        this.errorMonitorTerminal = null;\n      }\n    });\n  }\n\n  private setupTerminalListener(terminal: vscode.Terminal) {\n    // Skip if already monitoring this terminal\n    if (this.monitoredTerminals.has(terminal.name) || terminal.name === 'Error Monitor') {\n      return;\n    }\n    \n    this.monitoredTerminals.add(terminal.name);\n    \n    // Track active terminal\n    vscode.window.onDidChangeActiveTerminal(activeTerminal => {\n      if (activeTerminal) {\n        this.lastActiveTerminal = activeTerminal;\n      }\n    });\n\n    // Only attach listener, don't create new terminals here\n    terminal.processId.then(processId => {\n      if (processId) {\n        this.attachTerminalListener(terminal);\n      }\n    });\n  }\n\n  private attachTerminalListener(terminal: vscode.Terminal) {\n    // Don't create new terminals here, just set up the listener\n    const pty = {\n      onDidWrite: new vscode.EventEmitter<string>().event,\n      open: () => {},\n      close: () => {},\n      handleInput: (data: string) => {\n        // Check for fix command\n        if (data.toLowerCase().includes('fix') && data.toLowerCase().includes('bug')) {\n          this.handleFixCommand(terminal);\n        }\n      }\n    } as vscode.Pseudoterminal;\n\n    // Only create the error monitor terminal once if it doesn't exist\n    if (!this.errorMonitorTerminal) {\n      this.errorMonitorTerminal = vscode.window.createTerminal({\n        name: 'Error Monitor',\n        pty\n      });\n    }\n  }\n\n  private async handleFixCommand(terminal: vscode.Terminal) {\n    if (!this.lastActiveTerminal) {\n      return;\n    }\n\n    // Get the active editor\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n      terminal.sendText('No active file to fix.');\n      return;\n    }\n\n    // Get diagnostics for current file\n    const uri = editor.document.uri;\n    const diagnostics = vscode.languages.getDiagnostics(uri);\n    const errors = diagnostics.filter(d => d.severity === vscode.DiagnosticSeverity.Error);\n\n    if (errors.length === 0) {\n      terminal.sendText('No errors found in the current file.');\n      return;\n    }\n\n    // Process errors\n    const errorMessages = errors.map(error => ({\n      message: error.message,\n      range: error.range,\n      code: error.code\n    }));\n\n    await this.processError(JSON.stringify(errorMessages), uri);\n  }\n\n  private async handleTerminalOutput(event: TerminalOutputEvent): Promise<void> {\n    if (this.terminal && event.terminal === this.terminal) {\n      await this.handleTerminalData(event.terminal, event.data);\n    }\n  }\n\n  private async handleTerminalData(terminal: vscode.Terminal, data: string) {\n    if (!terminal) {\n      return;\n    }\n\n    // Check for error patterns\n    if (this.isErrorMessage(data) && !this.isProcessingError) {\n      this.errorBuffer.push(data);\n      \n      // Wait for the complete error message\n      await new Promise(resolve => setTimeout(resolve, 100));\n      \n      if (this.errorBuffer.length > 0) {\n        await this.processError(this.errorBuffer.join('\\n'));\n        this.errorBuffer = [];\n      }\n    }\n  }\n\n  private async handleDiagnosticsChange(event: vscode.DiagnosticChangeEvent) {\n    if (this.isProcessingError) {\n      return;\n    }\n\n    for (const uri of event.uris) {\n      const diagnostics = vscode.languages.getDiagnostics(uri);\n      const errors = diagnostics.filter(d => d.severity === vscode.DiagnosticSeverity.Error);\n      \n      if (errors.length > 0) {\n        const errorMessages = errors.map(error => ({\n          message: error.message,\n          range: error.range,\n          code: error.code\n        }));\n        \n        await this.processError(JSON.stringify(errorMessages), uri);\n      }\n    }\n  }\n\n  private isErrorMessage(data: string): boolean {\n    const errorPatterns = [\n      /error/i,\n      /exception/i,\n      /traceback/i,\n      /failed/i,\n      /syntax error/i\n    ];\n    return errorPatterns.some(pattern => pattern.test(data));\n  }\n\n  private async processError(errorMessage: string, uri?: vscode.Uri) {\n    this.isProcessingError = true;\n    try {\n      const context: AgentContext = {\n        filePath: uri?.fsPath,\n        originalContent: uri ? await this.getFileContent(uri) : undefined,\n        prompt: `Fix this error:\\n${errorMessage}`,\n        geminiService: undefined as any, // Will be provided by the agent system\n        fileService: undefined as any,   // Will be provided by the agent system\n        diffService: undefined as any    // Will be provided by the agent system\n      };\n\n      await this.execute(context);\n    } finally {\n      this.isProcessingError = false;\n    }\n  }\n\n  private async getFileContent(uri: vscode.Uri): Promise<string> {\n    const document = await vscode.workspace.openTextDocument(uri);\n    return document.getText();\n  }\n\n  canHandle(input: string): boolean {\n    return input.startsWith(this.commandPrefix);\n  }\n\n  async execute(context: AgentContext): Promise<AgentResponse> {\n    try {\n      const { filePath, originalContent, prompt, geminiService } = context;\n      \n      if (!filePath || !originalContent) {\n        return {\n          success: false,\n          message: 'Missing file information'\n        };\n      }\n\n      // Generate fix using LLM\n      const fixPrompt = `\nFix the following error in this code:\n\nFile: ${filePath}\nError: ${prompt}\n\nOriginal code:\n\\`\\`\\`\n${originalContent}\n\\`\\`\\`\n\nProvide only the fixed code without any explanations.\nIf multiple fixes are possible, provide the most likely fix.\nPreserve the original code structure and style.\n`;\n\n      const response = await geminiService.generateResponse([\n        { role: 'user', content: fixPrompt }\n      ]);\n\n      // Extract code from response\n      const fixedCode = this.extractCode(response);\n\n      // Show diff and apply changes\n      if (fixedCode && fixedCode !== originalContent) {\n        context.diffService.showDiff(filePath, originalContent, fixedCode);\n        return {\n          success: true,\n          message: 'Fix generated. Please review the changes in the diff view.',\n          content: fixedCode\n        };\n      }\n\n      return {\n        success: false,\n        message: 'No fixes needed or could not generate a fix.'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `Error in ErrorFixAgent: ${error instanceof Error ? error.message : String(error)}`\n      };\n    }\n  }\n\n  private extractCode(response: string): string {\n    const codeBlockRegex = /```(?:[\\w-]*\\n)?([\\s\\S]*?)```/g;\n    const matches = Array.from(response.matchAll(codeBlockRegex));\n    \n    if (matches.length > 0) {\n      return matches.reduce((longest, current) => \n        current[1].length > longest.length ? current[1] : longest\n      , '').trim();\n    }\n    \n    return response.trim();\n  }\n\n  async validate(context: AgentContext): Promise<boolean> {\n    return Boolean(context.filePath && context.originalContent);\n  }\n}\n","import * as vscode from 'vscode';\nimport * as path from 'path';\nimport { GeminiService, ChatMessage } from '../services/GeminiService';\nimport { FileService } from '../services/FileService';\nimport { DiffService } from '../services/DiffService';\nimport { marked } from 'marked';\nimport { AgentRegistry } from '../agents/AgentRegistry';\nimport { EditAgent } from '../agents/EditAgent';\nimport { DocumentationAgent } from '../agents/DocumentationAgent';\nimport { AgentContext } from '../agents/BaseAgent';\nimport { TestAgent } from '../agents/TestAgent';\nimport { DevToolsAgent } from '../agents/DevToolsAgent';\n\nexport class SidebarProvider implements vscode.WebviewViewProvider {\n  private _view?: vscode.WebviewView;\n  private _context: vscode.ExtensionContext;\n  private _geminiService: GeminiService;\n  private _fileService: FileService;\n  private _diffService: DiffService;\n  private _mode: 'chat' | 'agent' | 'devtools' = 'chat';\n  private _chatHistory: ChatMessage[] = [];\n  private agentRegistry: AgentRegistry;\n  private _devToolsAgent: DevToolsAgent;\n\n  constructor(\n    context: vscode.ExtensionContext,\n    geminiService: GeminiService,\n    fileService: FileService,\n    diffService: DiffService\n  ) {\n    this._context = context;\n    this._geminiService = geminiService;\n    this._fileService = fileService;\n    this._diffService = diffService;\n\n    // Initialize agent registry\n    this.agentRegistry = AgentRegistry.getInstance(this._context);\n    \n    // Register built-in agents\n    this.agentRegistry.registerAgent(new EditAgent());\n    this.agentRegistry.registerAgent(new DocumentationAgent());\n    this.agentRegistry.registerAgent(new TestAgent());\n    \n    // Add or update where DevToolsAgent is instantiated\n    this._devToolsAgent = new DevToolsAgent(this._context);\n  }\n\n  public resolveWebviewView(\n    webviewView: vscode.WebviewView,\n    context: vscode.WebviewViewResolveContext,\n    token: vscode.CancellationToken\n  ) {\n    this._view = webviewView;\n\n    webviewView.webview.options = {\n      enableScripts: true,\n      localResourceRoots: [\n        vscode.Uri.joinPath(this._context.extensionUri, 'webview-ui'),\n        vscode.Uri.joinPath(this._context.extensionUri, 'assets')\n      ]\n    };\n\n    webviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\n\n    // Handle messages from the webview\n    webviewView.webview.onDidReceiveMessage(async (data) => {\n      switch (data.type) {\n        case 'sendMessage':\n          await this._handleUserMessage(data.message);\n          break;\n        case 'setMode':\n          this.setMode(data.mode);\n          break;\n        case 'clearChat':\n          this._chatHistory = [];\n          this._updateChatHistory();\n          break;\n      }\n    });\n  }\n\n  public setMode(mode: 'chat' | 'agent' | 'devtools') {\n    this._mode = mode;\n    this._chatHistory = []; // Clear chat history when switching modes\n    this._updateChatHistory();\n    \n    if (this._view) {\n      this._view.webview.postMessage({ type: 'setMode', mode });\n      \n      // Add mode-specific welcome message\n      const welcomeMessage = this.getModeWelcomeMessage(mode);\n      this._chatHistory.push({\n        role: 'assistant',\n        content: welcomeMessage\n      });\n      this._updateChatHistory();\n    }\n  }\n\n  private getModeWelcomeMessage(mode: 'chat' | 'agent' | 'devtools'): string {\n    switch (mode) {\n      case 'chat':\n        return \"Ask me anything about your code! You can reference files using @filename syntax.\";\n      case 'agent':\n        return \"I'm ready to help you with file operations! Use:\\n- @file to read files\\n- /filename to create new files\\n- #filename to edit files\";\n      case 'devtools':\n        return \"DevTools mode activated! Available commands:\\n- @ui-analyze <selector> - Analyze UI elements\\n- @ui-fix <selector> - Fix UI issues\\n- @ui-test <component> - Generate UI tests\";\n      default:\n        return \"How can I help you today?\";\n    }\n  }\n\n  private async _handleUserMessage(message: string) {\n    try {\n      // Add user message to chat history\n      this._chatHistory.push({ role: 'user', content: message });\n      this._updateChatHistory();\n\n      // Show loading indicator\n      if (this._view) {\n        this._view.webview.postMessage({ type: 'setLoading', isLoading: true });\n      }\n\n      let response: string;\n\n      if (this._mode === 'chat') {\n        // Ask mode: Only handle file references for reading\n        message = await this._processFileReferences(message);\n        response = await this._geminiService.generateResponse(this._chatHistory);\n      } else {\n        // Find appropriate agent for the input\n        const agent = this.agentRegistry.findAgentForInput(message);\n        \n        if (agent) {\n          // Extract file path and prompt based on agent's command prefix\n          const input = message.substring(agent.commandPrefix.length).trim();\n          const [filePath, ...promptParts] = input.split(' ');\n          const prompt = promptParts.join(' ');\n\n          try {\n            // Read the file content if needed\n            const originalContent = await this._fileService.readFile(filePath);\n\n            // Create agent context\n            const context: AgentContext = {\n              filePath,\n              prompt,\n              originalContent,\n              fileService: this._fileService,\n              geminiService: this._geminiService,\n              diffService: this._diffService\n            };\n\n            // Execute agent\n            const result = await agent.execute(context);\n            response = result.message;\n\n            if (!result.success) {\n              vscode.window.showErrorMessage(result.message);\n            }\n          } catch (error) {\n            response = `Error processing file ${filePath}: ${error instanceof Error ? error.message : String(error)}`;\n            vscode.window.showErrorMessage(response);\n          }\n        } else {\n          response = 'No agent found to handle this command. Available commands:\\n' +\n            this.agentRegistry.getAllAgents()\n              .map(a => `${a.commandPrefix} - ${a.description}`)\n              .join('\\n');\n        }\n      }\n\n      // Add assistant response to chat history\n      this._chatHistory.push({ role: 'assistant', content: response });\n      this._updateChatHistory();\n\n      // Hide loading indicator\n      if (this._view) {\n        this._view.webview.postMessage({ type: 'setLoading', isLoading: false });\n      }\n    } catch (error) {\n      console.error('Error handling message:', error);\n      const errorMessage = `Error: ${error instanceof Error ? error.message : String(error)}`;\n      \n      if (this._view) {\n        this._view.webview.postMessage({ type: 'setLoading', isLoading: false });\n        this._view.webview.postMessage({ \n          type: 'addMessage', \n          message: { role: 'assistant', content: errorMessage }\n        });\n      }\n    }\n  }\n\n  private async _processFileReferences(message: string): Promise<string> {\n    // Only process @file references in Ask mode (for reading)\n    const fileRegex = /@([^\\s]+)/g;\n    let match;\n    let processedMessage = message;\n    \n    while ((match = fileRegex.exec(message)) !== null) {\n      const filePath = match[1];\n      try {\n        const content = await this._fileService.readFile(filePath);\n        processedMessage = processedMessage.replace(match[0], `@${filePath}\\n\\`\\`\\`\\n${content}\\n\\`\\`\\``);\n      } catch (error) {\n        console.error(`Error reading file ${filePath}:`, error);\n      }\n    }\n    \n    return processedMessage;\n  }\n\n  private async _handleToolCalls(functionCalls: any[], textResponse: string): Promise<string> {\n    let response = textResponse || '';\n    \n    for (const call of functionCalls) {\n      const functionName = call.name;\n      const args = call.args || {};\n      \n      try {\n        let result;\n        \n        switch (functionName) {\n          case 'readFile':\n            result = await this._fileService.readFile(args.filePath);\n            response += `\\n\\nRead file ${args.filePath}:\\n\\`\\`\\`\\n${result}\\n\\`\\`\\``;\n            break;\n            \n          case 'writeFile':\n            await this._fileService.writeFile(args.filePath, args.content);\n            response += `\\n\\nCreated file ${args.filePath}`;\n            break;\n            \n          case 'editFile':\n            // Show diff and ask for confirmation\n            this._diffService.showDiff(args.filePath, args.originalContent, args.newContent);\n            response += `\\n\\nProposed changes to ${args.filePath}. Please review the diff and apply or reject the changes.`;\n            break;\n            \n          default:\n            response += `\\n\\nUnknown function call: ${functionName}`;\n        }\n      } catch (error) {\n        console.error(`Error executing function ${functionName}:`, error);\n        response += `\\n\\nError executing ${functionName}: ${error instanceof Error ? error.message : String(error)}`;\n      }\n    }\n    \n    return response;\n  }\n\n  private _updateChatHistory() {\n    if (this._view) {\n      this._view.webview.postMessage({\n        type: 'updateChatHistory',\n        history: this._chatHistory\n      });\n    }\n  }\n\n  private _getHtmlForWebview(webview: vscode.Webview) {\n    const scriptUri = webview.asWebviewUri(\n      vscode.Uri.joinPath(this._context.extensionUri, 'webview-ui', 'main.js')\n    );\n\n    const styleUri = webview.asWebviewUri(\n      vscode.Uri.joinPath(this._context.extensionUri, 'webview-ui', 'styles.css')\n    );\n\n    const nonce = getNonce();\n\n    return `<!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src ${webview.cspSource} https://cdnjs.cloudflare.com; script-src 'nonce-${nonce}'; font-src https://cdnjs.cloudflare.com;\">\n      <link href=\"${styleUri}\" rel=\"stylesheet\">\n      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n      <title>Momo</title>\n      <style>\n        .logo {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n        .logo i {\n          font-size: 24px;\n          color: var(--vscode-editor-foreground);\n        }\n      </style>\n    </head>\n    <body>\n      <header>\n        <div class=\"logo\">\n          <i class=\"fa fa-comments-o\" aria-hidden=\"true\"></i>\n          <h1>Momo</h1>\n        </div>\n        <div class=\"mode-selector\">\n          <button id=\"askMode\" class=\"mode-button active\">Ask</button>\n          <button id=\"agentMode\" class=\"mode-button\">Agent</button>\n          <button id=\"devtoolsMode\" class=\"mode-button\">DevTools</button>\n        </div>\n        <button id=\"clearChat\" class=\"clear-button\">Clear</button>\n      </header>\n      \n      <div id=\"chatContainer\" class=\"chat-container\">\n        <div id=\"chatMessages\" class=\"chat-messages\"></div>\n      </div>\n      \n      <div class=\"input-container\">\n        <textarea id=\"userInput\" placeholder=\"Type your message...\" rows=\"3\"></textarea>\n        <button id=\"sendButton\" class=\"send-button\">Send</button>\n      </div>\n      \n      <script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\n    </body>\n    </html>`;\n  }\n\n  /**\n   * Track the last edited file\n   * @param filePath Path to the file\n   */\n  private _trackLastEditedFile(filePath: string): void {\n    this._context.workspaceState.update('lastEditedFile', filePath);\n  }\n\n  /**\n   * Extract code blocks from an LLM response\n   * @param llmResponse The response from the LLM\n   * @returns The extracted code\n   */\n  private _extractCodeFromResponse(llmResponse: string): string {\n    const codeBlockRegex = /```(?:[\\w-]*\\n)?([\\s\\S]*?)```/g;\n    const codeBlocks: string[] = [];\n    let match;\n\n    while ((match = codeBlockRegex.exec(llmResponse)) !== null) {\n      // Clean up the code block by removing marker comments\n      const cleanedCode = match[1].trim()\n        .replace(/\\/\\/ \\.\\.\\. existing code \\.\\.\\.\\n?/g, '')\n        .replace(/\\/\\* \\.\\.\\. existing code \\.\\.\\. \\*\\/\\n?/g, '');\n      codeBlocks.push(cleanedCode);\n    }\n\n    // Use the largest code block as the main edit suggestion\n    if (codeBlocks.length > 0) {\n      return codeBlocks.reduce(\n        (longest, current) => (current.length > longest.length ? current : longest),\n        \"\"\n      );\n    }\n\n    // If no code blocks found, return the original response\n    return llmResponse;\n  }\n\n  private _getLanguageValidationRules(fileExtension: string): string {\n    const rules: { [key: string]: string } = {\n      '.html': `For HTML files:\n1. Preserve DOCTYPE declaration if present\n2. Maintain proper tag nesting and closure\n3. Preserve meta tags and their attributes in head section\n4. Keep script and style tags intact unless explicitly modified\n5. Preserve class, id, and data attributes\n6. Maintain proper indentation of nested elements`,\n\n      '.js': `For JavaScript files:\n1. Preserve import/export statements\n2. Maintain function and class declarations\n3. Keep variable declarations and their scope\n4. Preserve async/await and Promise chains\n5. Keep error handling (try/catch) blocks\n6. Maintain module exports\n7. Preserve event listeners and callbacks`,\n\n      '.ts': `For TypeScript files:\n1. Preserve type declarations and interfaces\n2. Maintain import/export statements\n3. Keep type annotations and generics\n4. Preserve class decorators and metadata\n5. Maintain namespace declarations\n6. Keep enum declarations\n7. Preserve access modifiers (public, private, etc.)`,\n\n      '.jsx': `For JSX/React files:\n1. Preserve component imports and exports\n2. Maintain prop types and default props\n3. Keep state declarations and hooks\n4. Preserve component lifecycle methods\n5. Maintain event handlers\n6. Keep JSX structure and nesting\n7. Preserve key props and refs`,\n\n      '.tsx': `For TSX/React files:\n1. Preserve type declarations and interfaces\n2. Maintain component props typing\n3. Keep hooks and their type definitions\n4. Preserve component exports and imports\n5. Maintain generic type parameters\n6. Keep event handler typings\n7. Preserve context types and providers`,\n\n      '.css': `For CSS files:\n1. Preserve selector specificity\n2. Maintain media queries\n3. Keep vendor prefixes\n4. Preserve keyframe animations\n5. Maintain variable declarations\n6. Keep import statements\n7. Preserve comment-based section markers`,\n\n      '.py': `For Python files:\n1. Preserve import statements\n2. Maintain function and class definitions\n3. Keep docstrings and type hints\n4. Preserve decorators\n5. Maintain indentation levels\n6. Keep context managers (with statements)\n7. Preserve global variables and constants`,\n\n      '.java': `For Java files:\n1. Preserve package declaration\n2. Maintain import statements\n3. Keep class and interface declarations\n4. Preserve annotations\n5. Maintain access modifiers\n6. Keep exception handling\n7. Preserve generic type parameters`,\n\n      '.php': `For PHP files:\n1. Preserve namespace declarations\n2. Maintain use statements\n3. Keep class and trait declarations\n4. Preserve PHP tags\n5. Maintain error handling\n6. Keep method visibility\n7. Preserve type declarations`,\n\n      '.go': `For Go files:\n1. Preserve package declaration\n2. Maintain import statements\n3. Keep interface and struct definitions\n4. Preserve error handling\n5. Maintain goroutine calls\n6. Keep defer statements\n7. Preserve type declarations`,\n\n      '.rs': `For Rust files:\n1. Preserve use statements\n2. Maintain mod declarations\n3. Keep trait implementations\n4. Preserve macro invocations\n5. Maintain type definitions\n6. Keep lifetime annotations\n7. Preserve error handling`\n    };\n\n    // Get the rules for the file extension, or return generic rules if not found\n    return rules[fileExtension] || `Generic rules:\n1. Preserve all import/include statements\n2. Maintain function and class declarations\n3. Keep variable declarations and scope\n4. Preserve language-specific keywords and operators\n5. Maintain proper indentation and formatting\n6. Keep comments and documentation\n7. Preserve error handling structures`;\n  }\n}\n\nfunction getNonce() {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < 32; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffSentences = diffSentences;\nexports.sentenceDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar sentenceDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.sentenceDiff = sentenceDiff;\n\n/*istanbul ignore end*/\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL3NlbnRlbmNlLmpzIl0sIm5hbWVzIjpbInNlbnRlbmNlRGlmZiIsIkRpZmYiLCJ0b2tlbml6ZSIsInZhbHVlIiwic3BsaXQiLCJkaWZmU2VudGVuY2VzIiwib2xkU3RyIiwibmV3U3RyIiwiY2FsbGJhY2siLCJkaWZmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFHTyxJQUFNQSxZQUFZLEdBQUc7QUFBSUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUEsQ0FBSixFQUFyQjs7Ozs7O0FBQ1BELFlBQVksQ0FBQ0UsUUFBYixHQUF3QixVQUFTQyxLQUFULEVBQWdCO0FBQ3RDLFNBQU9BLEtBQUssQ0FBQ0MsS0FBTixDQUFZLHVCQUFaLENBQVA7QUFDRCxDQUZEOztBQUlPLFNBQVNDLGFBQVQsQ0FBdUJDLE1BQXZCLEVBQStCQyxNQUEvQixFQUF1Q0MsUUFBdkMsRUFBaUQ7QUFBRSxTQUFPUixZQUFZLENBQUNTLElBQWIsQ0FBa0JILE1BQWxCLEVBQTBCQyxNQUExQixFQUFrQ0MsUUFBbEMsQ0FBUDtBQUFxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaWZmIGZyb20gJy4vYmFzZSc7XG5cblxuZXhwb3J0IGNvbnN0IHNlbnRlbmNlRGlmZiA9IG5ldyBEaWZmKCk7XG5zZW50ZW5jZURpZmYudG9rZW5pemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUuc3BsaXQoLyhcXFMuKz9bLiE/XSkoPz1cXHMrfCQpLyk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZGlmZlNlbnRlbmNlcyhvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spIHsgcmV0dXJuIHNlbnRlbmNlRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjayk7IH1cbiJdfQ==\n","module.exports = require(\"path\");","module.exports = require(\"fs/promises\");","import * as vscode from 'vscode';\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\n\nexport class FileService {\n  constructor(private context: vscode.ExtensionContext) {}\n\n  /**\n   * Read the content of a file\n   * @param filePath Path to the file\n   * @returns File content as string\n   */\n  public async readFile(filePath: string): Promise<string> {\n    try {\n      // Handle relative paths\n      const absolutePath = this.resolveFilePath(filePath);\n      \n      // Read the file\n      const uri = vscode.Uri.file(absolutePath);\n      const content = await fs.readFile(uri.fsPath, 'utf-8');\n      return content;\n    } catch (error) {\n      throw new Error(`Could not read file ${filePath}: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  /**\n   * Write content to a file\n   * @param filePath Path to the file\n   * @param content Content to write\n   * @returns True if successful\n   */\n  public async writeFile(filePath: string, content: string): Promise<void> {\n    try {\n      // Create full path using workspace root\n      const fullPath = path.join(vscode.workspace.workspaceFolders?.[0].uri.fsPath || '', filePath);\n      \n      // Ensure directory exists\n      await vscode.workspace.fs.createDirectory(\n        vscode.Uri.file(path.dirname(fullPath))\n      );\n\n      // Write file using fs API\n      await fs.writeFile(fullPath, content, 'utf-8');\n    } catch (error) {\n      console.error('Error writing file:', error);\n      throw new Error(`Failed to write file ${filePath}: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  /**\n   * Edit a file with specific changes\n   * @param filePath Path to the file\n   * @param edits Array of edits to apply\n   * @returns True if successful\n   */\n  public async editFile(filePath: string, edits: { range: vscode.Range; text: string }[]): Promise<boolean> {\n    try {\n      // Handle # syntax for editing files\n      if (filePath.startsWith('#')) {\n        filePath = filePath.substring(1);\n      }\n\n      const uri = vscode.Uri.file(this.resolveFilePath(filePath));\n      const document = await vscode.workspace.openTextDocument(uri);\n      const edit = new vscode.WorkspaceEdit();\n      \n      for (const e of edits) {\n        edit.replace(uri, e.range, e.text);\n      }\n      \n      return await vscode.workspace.applyEdit(edit);\n    } catch (error) {\n      console.error(`Error editing file ${filePath}:`, error);\n      throw new Error(`Failed to edit file ${filePath}: ${error}`);\n    }\n  }\n\n  /**\n   * Get file or folder information\n   * @param resourcePath Path to the file or folder\n   * @returns Information about the resource\n   */\n  public async getResourceInfo(resourcePath: string): Promise<any> {\n    try {\n      // Handle @folder syntax\n      if (resourcePath.startsWith('@')) {\n        resourcePath = resourcePath.substring(1);\n      }\n      const uri = vscode.Uri.file(this.resolveFilePath(resourcePath));\n      const stat = await vscode.workspace.fs.stat(uri);\n      \n      if (stat.type === vscode.FileType.Directory) {\n        // It's a directory, list its contents\n        const entries = await vscode.workspace.fs.readDirectory(uri);\n        return {\n          type: 'directory',\n          name: path.basename(resourcePath),\n          path: resourcePath,\n          contents: entries.map(([name, type]) => ({\n            name,\n            type: type === vscode.FileType.Directory ? 'directory' : 'file'\n          }))\n        };\n      } else {\n        // It's a file, return its info\n        return {\n          type: 'file',\n          name: path.basename(resourcePath),\n          path: resourcePath,\n          size: stat.size\n        };\n      }\n    } catch (error) {\n      console.error(`Error getting resource info for ${resourcePath}:`, error);\n      throw new Error(`Failed to get resource info for ${resourcePath}: ${error}`);\n    }\n  }\n\n  /**\n   * Resolve a file path to a URI\n   * @param filePath Relative or absolute file path\n   * @returns VS Code URI\n   */\n  private resolveFilePath(filePath: string): string {\n    // If it's already an absolute path, return it\n    if (path.isAbsolute(filePath)) {\n      return filePath;\n    }\n\n    // Get the workspace folder\n    const workspaceFolders = vscode.workspace.workspaceFolders;\n    if (!workspaceFolders) {\n      throw new Error('No workspace folder found');\n    }\n\n    // Resolve relative to the first workspace folder\n    return path.join(workspaceFolders[0].uri.fsPath, filePath);\n  }\n\n  /**\n   * Check if a file exists\n   */\n  public async fileExists(filePath: string): Promise<boolean> {\n    try {\n      const uri = vscode.Uri.file(this.resolveFilePath(filePath));\n      const stat = await vscode.workspace.fs.stat(uri);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * List directory contents\n   */\n  public async listDirectory(dirPath: string): Promise<[string, vscode.FileType][]> {\n    try {\n      const uri = vscode.Uri.file(this.resolveFilePath(dirPath));\n      const entries = await vscode.workspace.fs.readDirectory(uri);\n      return entries;\n    } catch (error) {\n      throw new Error(`Could not list directory ${dirPath}: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  /**\n   * Create a directory\n   */\n  public async createDirectory(dirPath: string): Promise<void> {\n    try {\n      const uri = vscode.Uri.file(this.resolveFilePath(dirPath));\n      await vscode.workspace.fs.createDirectory(uri);\n    } catch (error) {\n      throw new Error(`Could not create directory ${dirPath}: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  /**\n   * Delete a file or directory\n   */\n  public async delete(path: string, options?: { recursive?: boolean }): Promise<void> {\n    try {\n      const uri = vscode.Uri.file(this.resolveFilePath(path));\n      await vscode.workspace.fs.delete(uri, options);\n    } catch (error) {\n      throw new Error(`Could not delete ${path}: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  /**\n   * Create a file\n   */\n  public async createFile(filepath: string, content: string = ''): Promise<void> {\n    try {\n      await fs.writeFile(filepath, content, 'utf-8');\n    } catch (error) {\n      throw new Error(`Could not create file ${filepath}: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  /**\n   * Create a folder\n   */\n  public async createFolder(folderPath: string): Promise<void> {\n    try {\n      await fs.mkdir(folderPath, { recursive: true });\n    } catch (error) {\n      throw new Error(`Could not create folder ${folderPath}: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["Object","defineProperty","exports","value","parsePatch","uniDiff","options","arguments","length","undefined","diffstr","split","delimiters","match","list","i","parseIndex","index","push","line","test","header","exec","parseFileHeader","hunks","_line","parseHunk","strict","Error","JSON","stringify","fileHeader","keyPrefix","data","fileName","replace","substr","trim","chunkHeaderIndex","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation","constructor","context","genAI","model","apiKey","modelName","this","initialize","vscode","workspace","onDidChangeConfiguration","e","affectsConfiguration","config","getConfiguration","get","GoogleGenerativeAI","getGenerativeModel","console","log","error","window","showErrorMessage","showWarningMessage","getModelConfig","temperature","topK","topP","maxOutputTokens","generateResponse","messages","systemPrompt","history","role","content","geminiMessages","map","msg","parts","text","chat","startChat","generationConfig","slice","lastMessage","sendMessage","response","generateWithToolCalling","tools","client","outputChannel","createOutputChannel","connectToDevTools","appendLine","analyzeUI","selector","elements","suggestions","captureScreenshot","evaluateAccessibility","monitorNetworkRequests","injectUITest","testScript","dispose","id","name","description","commandPrefix","canHandle","input","startsWith","execute","prompt","success","message","command","substring","String","filePath","fileService","geminiService","targetPath","docOutputPath","getDocumentationFilePath","documentation","readFile","generateDocumentation","writeFile","sourceFilePath","dir","path","dirname","basename","extname","join","fileType","Date","toISOString","createChangeLogEntry","timestamp","action","getChangeLogPath","updateChangeLog","changeLogPath","newEntry","existingContent","updatedContent","generateFileDocumentation","generateFolderDocumentation","folderPath","structure","getFolderStructure","fileOverviews","getFileOverviews","indent","result","items","fs","readdir","item","shouldIgnore","fullPath","stat","isDirectory","importantFiles","findImportantFiles","overviews","file","overview","relative","important","self","async","scan","isImportantFile","filename","Boolean","includes","endsWith","getDocumentationPath","generateOptions","defaults","callback","hasOwnProperty","obj","diffCss","oldStr","newStr","cssDiff","diff","__esModule","tokenize","module","require","terminal","originalContent","testFilePath","getTestFilePath","existingTests","testContext","createTestContext","llmResponse","code","testCode","stats","extractTestCodeAndStats","runTests","testStats","ext","sourceCode","fileExtension","toLowerCase","framework","detectTestFramework","extractTestCode","matches","Array","from","matchAll","reduce","longest","current","statsMatch","total","failed","parseInt","cleanResponse","getTestCommand","workspaceFolder","workspaceFolders","fullTestPath","isAbsolute","uri","fsPath","testFileUri","Uri","createTerminal","show","venvPath","activateCmd","process","platform","pathExists","sendText","finalCommand","testPath","escapedPath","validate","wsServer","clients","Set","_context","chromeDevTools","ChromeDevTools","diagnosticsCollection","languages","createDiagnosticCollection","setupWebSocketServer","WebSocketServer","port","on","ws","add","parse","toString","handleDevToolsMessage","delete","type","handleEditRequest","aiPrompt","createAIPrompt","aiResponse","_geminiService","handleUISuggestion","suggestion","handleErrorReport","handleTestRequest","component","editAgent","EditAgent","editContext","FileService","diffService","DiffService","broadcastToDevTools","changes","recommendation","priority","stack","interactions","aiEnhancedSuggestion","aiAnalysis","showInformationMessage","then","selection","showDetailedAnalysis","aiEnhancedError","showInProblemsPanel","testCases","parseTestCases","aiEnhancedTest","generatedTests","createTestFile","messageStr","forEach","readyState","OPEN","send","args","fixUIIssue","generateUITests","target","analysis","issue","createWebviewPanel","ViewColumn","Two","enableScripts","webview","html","getAnalysisHtml","diagnostic","Diagnostic","Range","DiagnosticSeverity","Map","set","filter","componentName","testFileContent","generateTestFileContent","Buffer","tc","close","Diff","buildValues","lastComponent","newString","oldString","useLongestToken","nextComponent","components","previousComponent","reverse","componentPos","componentLen","newPos","oldPos","removed","count","added","tmp","oldValue","finalComponent","equals","pop","prototype","_options$timeout","done","setTimeout","castInput","removeEmpty","newLen","oldLen","editLength","maxEditLength","Math","min","maxExecutionTime","timeout","Infinity","abortAfterTimestamp","now","bestPath","extractCommon","minDiagonalToConsider","maxDiagonalToConsider","execEditLength","diagonalPath","max","basePath","removePath","addPath","canAdd","addPathNewPos","canRemove","addToPath","ret","oldPosInc","last","commonCount","left","right","comparator","ignoreCase","array","chars","askCommand","commands","registerCommand","subscriptions","GeminiService","devToolsAgent","DevToolsAgent","sidebarProvider","SidebarProvider","sidebarRegistration","registerWebviewViewProvider","webviewOptions","retainContextWhenHidden","agentCommand","executeCommand","setMode","applyChangesCommand","applyChanges","rejectChangesCommand","rejectChanges","devToolsCommand","update","ConfigurationTarget","Global","diffLines","lineDiff","diffTrimmedLines","_params","ignoreWhitespace","_base","stripTrailingCr","retLines","linesAndNewlines","newlineIsToken","diffArrays","oldArr","newArr","arrayDiff","cleanFilePath","fileUri","joinPath","document","openTextDocument","getText","createEditContext","codeBlocks","extractCodeBlocks","newContent","showDiff","editor","showTextDocument","edit","editBuilder","fullRange","positionAt","codeBlockRegex","cleanedCode","resolveFilePath","editTarget","parseEditTarget","targetInstructions","sanitizeCodeBlock","codeBlock","RegExp","lineRangeMatch","start","end","lineRange","functionMatch","identifier","methodMatch","classMatch","sectionMatch","getOrCreateDocument","Uint8Array","diffWords","wordDiff","diffWordsWithSpace","extendedWordChars","reWhitespace","tokens","splice","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","iterator","HarmCategory","HarmBlockThreshold","HarmProbability","BlockReason","FinishReason","TaskType","Task","GoogleGenerativeAIError","super","GoogleGenerativeAIResponseError","RequestUrl","task","stream","url","makeRequest","body","requestOptions","fetch","assign","fetchOptions","abortController","AbortController","signal","abort","buildFetchOptions","method","headers","ok","json","details","status","statusText","err","addHelpers","candidates","warn","hadBadFinishReason","formatBlockErrorMessage","_a","_b","_c","_d","promptFeedback","badFinishReasons","RECITATION","SAFETY","candidate","finishReason","firstCandidate","finishMessage","blockReason","blockReasonMessage","__await","v","SuppressedError","responseLineRE","getResponsePromise","allResponses","reader","getReader","read","aggregateResponses","generateResponseSequence","thisArg","_arguments","generator","Symbol","asyncIterator","TypeError","g","apply","q","verb","n","Promise","a","b","resume","r","resolve","fulfill","reject","settle","f","shift","__asyncGenerator","responses","lastResponse","aggregatedResponse","citationMetadata","safetyRatings","part","generateContentStream","params","STREAM_GENERATE_CONTENT","responseStream","inputStream","ReadableStream","controller","currentText","pump","parsedResponse","enqueue","getResponseStream","pipeThrough","TextDecoderStream","fatal","stream1","stream2","tee","processStream","generateContent","GENERATE_CONTENT","formatNewContent","request","newParts","partOrString","formatGenerateContentInput","contents","SILENT_ERROR","ChatSession","_history","_sendPromise","_apiKey","getHistory","generateContentRequest","safetySettings","finalResult","responseContent","blockErrorMessage","sendMessageStream","streamPromise","catch","_ignored","streamResult","GenerativeModel","modelParams","formattedParams","startChatParams","countTokens","COUNT_TOKENS","embedContent","isArray","EMBED_CONTENT","batchEmbedContents","batchEmbedContentRequest","BATCH_EMBED_CONTENTS","requestsWithModel","requests","applyPatch","applyPatches","_parse","currentIndex","processIndex","complete","loadFile","patched","_distanceIterator","source","removeEOFNL","addEOFNL","compareLine","lineNumber","patchContent","errorCount","fuzzFactor","offset","hunkFits","toPos","j","diffOffset","_i","_hunk","_toPos","delimiter","previousOperation","_k","AgentRegistry","agents","registerBuiltinAgents","registerAgent","RunAgent","ErrorFixAgent","FileManagementAgent","getInstance","instance","agent","has","getAgent","getAllAgents","values","findAgentForInput","find","enumerable","_character","diffChars","_word","_sentence","diffSentences","_css","_json","diffJson","canonicalize","_array","_apply","_merge","merge","_reverse","reversePatch","_create","structuredPatch","createTwoFilesPatch","createPatch","formatPatch","_dmp","convertChangesToDMP","_xml","convertChangesToXML","calcLineCount","mine","theirs","base","loadPatch","newFileName","fileNameChanged","oldFileName","selectField","oldHeader","newHeader","mineIndex","theirsIndex","mineOffset","theirsOffset","mineCurrent","theirsCurrent","hunkBefore","cloneHunk","mergedHunk","mergeLines","_toConsumableArray","arr","_arrayLikeToArray","_arrayWithoutHoles","iter","_iterableToArray","o","minLen","call","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","_calcOldNewLineCount","calcOldNewLineCount","param","patch","conflict","check","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","_hunk$lines","collectChange","_hunk$lines2","removal","mutualChange","insertTrailing","myChanges","theirChanges","allRemoves","_hunk$lines3","_hunk$lines4","arrayStartsWith","skipRemoveSuperset","arrayEqual","_hunk$lines5","swap","_hunk$lines6","state","matchChanges","merged","matchIndex","contextChanges","conflicted","change","collectContext","insert","prev","removeChanges","delta","changeContent","myCount","theirCount","s","some","cmd","workspaceRoot","commandPattern","targetUri","createDirectory","useTrash","recursive","characterDiff","oldRangeStart","newRangeStart","curRange","oldLine","newLine","_loop","_curRange","contextLines","entry","_curRange2","_curRange3","contextSize","oldEOFNewline","newEOFNewline","noNlBeforeAdds","oldObj","newObj","jsonDiff","_typeof","objectPrototypeToString","replacementStack","replacer","key","canonicalizedObj","toJSON","_key","sortedKeys","sort","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","k","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","l","concat","pendingChanges","diffPanel","createDiff","normalizedPath","stripFileExtension","getFileUri","diffHtml","escapeHtml","onDidDispose","htmlContent","onDidReceiveMessage","uriString","entries","WorkspaceEdit","applyEdit","displayPath","clearChanges","clear","lastDotIndex","lastIndexOf","previewChanges","diffDoc","language","preview","errorBuffer","isProcessingError","lastActiveTerminal","monitoredTerminals","errorMonitorTerminal","INSTANCE","onDidOpenTerminal","setupTerminalListener","terminals","onDidChangeDiagnostics","event","handleDiagnosticsChange","onDidCloseTerminal","onDidChangeActiveTerminal","activeTerminal","processId","attachTerminalListener","pty","onDidWrite","EventEmitter","open","handleInput","handleFixCommand","activeTextEditor","errors","getDiagnostics","d","severity","errorMessages","range","processError","handleTerminalOutput","handleTerminalData","isErrorMessage","uris","pattern","errorMessage","getFileContent","fixPrompt","fixedCode","extractCode","_mode","_chatHistory","_fileService","_diffService","agentRegistry","DocumentationAgent","TestAgent","_devToolsAgent","resolveWebviewView","webviewView","token","_view","localResourceRoots","extensionUri","_getHtmlForWebview","_handleUserMessage","mode","_updateChatHistory","postMessage","welcomeMessage","getModeWelcomeMessage","isLoading","_processFileReferences","promptParts","fileRegex","processedMessage","_handleToolCalls","functionCalls","textResponse","functionName","scriptUri","asWebviewUri","styleUri","nonce","possible","charAt","floor","random","getNonce","cspSource","_trackLastEditedFile","workspaceState","_extractCodeFromResponse","_getLanguageValidationRules","sentenceDiff","absolutePath","editFile","edits","getResourceInfo","resourcePath","FileType","Directory","readDirectory","size","fileExists","listDirectory","dirPath","createFile","filepath","createFolder","mkdir","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}